---

 linux-2.6.7-rc3-xx2-xiphux/include/linux/swap.h   |    1 
 linux-2.6.7-rc3-xx2-xiphux/include/linux/sysctl.h |    1 
 linux-2.6.7-rc3-xx2-xiphux/kernel/sysctl.c        |    8 +++
 linux-2.6.7-rc3-xx2-xiphux/mm/vmscan.c            |   57 ++++++++++++++++++++++
 4 files changed, 67 insertions(+)

diff -puN include/linux/swap.h~patch-2.6.7-rc2-as include/linux/swap.h
--- linux-2.6.7-rc3-xx2/include/linux/swap.h~patch-2.6.7-rc2-as	2004-06-12 23:36:56.166303656 -0400
+++ linux-2.6.7-rc3-xx2-xiphux/include/linux/swap.h	2004-06-12 23:36:56.187300464 -0400
@@ -179,6 +179,7 @@ do {					\
 extern int try_to_free_pages(struct zone **, unsigned int, unsigned int);
 extern int shrink_all_memory(int);
 extern int vm_mapped_page_cost;
+extern int auto_swappiness;
 
 #ifdef CONFIG_MMU
 /* linux/mm/shmem.c */
diff -puN include/linux/sysctl.h~patch-2.6.7-rc2-as include/linux/sysctl.h
--- linux-2.6.7-rc3-xx2/include/linux/sysctl.h~patch-2.6.7-rc2-as	2004-06-12 23:36:56.173302592 -0400
+++ linux-2.6.7-rc3-xx2-xiphux/include/linux/sysctl.h	2004-06-12 23:36:56.196299096 -0400
@@ -168,6 +168,7 @@ enum
 	VM_LAPTOP_MODE=23,	/* vm laptop mode */
 	VM_BLOCK_DUMP=24,	/* block dump mode */
 	VM_HUGETLB_GROUP=25,	/* permitted hugetlb group */
+	VM_AUTO_SWAPPINESS=26,	/* Make vm_swappiness autoregulated */
 };
 
 
diff -puN kernel/sysctl.c~patch-2.6.7-rc2-as kernel/sysctl.c
--- linux-2.6.7-rc3-xx2/kernel/sysctl.c~patch-2.6.7-rc2-as	2004-06-12 23:36:56.178301832 -0400
+++ linux-2.6.7-rc3-xx2-xiphux/kernel/sysctl.c	2004-06-12 23:36:56.220295448 -0400
@@ -728,6 +728,14 @@ static ctl_table vm_table[] = {
 		.extra1		= &one,
 		.extra2		= &one_hundred,
 	},
+	{
+		.ctl_name	= VM_AUTO_SWAPPINESS,
+		.procname	= "autoswappiness",
+		.data		= &auto_swappiness,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
 #ifdef CONFIG_HUGETLB_PAGE
 	 {
 		.ctl_name	= VM_HUGETLB_PAGES,
diff -puN mm/vmscan.c~patch-2.6.7-rc2-as mm/vmscan.c
--- linux-2.6.7-rc3-xx2/mm/vmscan.c~patch-2.6.7-rc2-as	2004-06-12 23:36:56.181301376 -0400
+++ linux-2.6.7-rc3-xx2-xiphux/mm/vmscan.c	2004-06-12 23:37:09.399291936 -0400
@@ -42,6 +42,7 @@
  * From 1 .. 100.  Higher means less swappy.
  */
 int vm_mapped_page_cost = 32;
+int auto_swappiness = 1;
 
 #define lru_to_page(_head) (list_entry((_head)->prev, struct page, lru))
 
@@ -693,6 +694,62 @@ shrink_active_list(struct zone *zone, st
 		page = lru_to_page(&l_hold);
 		list_del(&page->lru);
 
+	if (auto_swappiness) {
+#ifdef CONFIG_SWAP
+		int app_percent;
+		struct sysinfo i;
+
+		si_swapinfo(&i);
+
+		if (likely(i.totalswap >= 100)) {
+			int swap_centile, cost;
+
+			/*
+			 * app_percent is the percentage of physical ram used
+			 * by application pages.
+			 */
+			si_meminfo(&i);
+			app_percent = 100 - ((i.freeram + get_page_cache_size() -
+				swapper_space.nrpages) / (i.totalram / 100));
+
+			/*
+			 * swap_centile is the percentage of the last (sizeof physical
+			 * ram) of swap free.
+			 */
+			swap_centile = i.freeswap /
+				(min(i.totalswap, i.totalram) / 100);
+			/*
+			 * Autoregulate vm_swappiness to be equal to the lowest of
+			 * app_percent and swap_centile.  Bias it downwards -ck
+			 */
+			cost = min(app_percent, swap_centile);
+			cost = cost * cost / 100;
+
+			/*
+			 * Originally, higher meant more swappy, but Nick changed it
+			 * so higher means less swappy.  So we need to invert this
+			 * value.
+			 *
+			 * It is important to invert this value AFTER
+			 * it is biased downwards - if we invert it too early, it
+			 * will throw off the value when it is biased. -xx
+			 */
+			cost = 100 - cost;
+
+			/*
+			 * The scale originally ran from 0-100, but Nick changed
+			 * it to 1-100.  So we need a check to prevent a zero
+			 * causing major breakage. -xx
+			 */
+			if (cost < 1)
+				vm_mapped_page_cost = 1;
+			else
+				vm_mapped_page_cost = cost;
+		} else
+			vm_mapped_page_cost = 100;
+#endif
+	}
+
 		/*
 		 * FIXME: need to consider page_count(page) here if/when we
 		 * reap orphaned pages via the LRU (Daniel's locking stuff)

_
