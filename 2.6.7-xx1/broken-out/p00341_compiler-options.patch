---

 linux-2.6.7-rc3-xx4-xiphux/arch/i386/Kconfig       |   41 -------------------
 linux-2.6.7-rc3-xx4-xiphux/arch/x86_64/Kconfig     |   41 -------------------
 linux-2.6.7-rc3-xx4-xiphux/kernel/Kconfig-extra.xx |   45 +++++++++++++++++++++
 3 files changed, 45 insertions(+), 82 deletions(-)

diff -puN kernel/Kconfig-extra.xx~compiler-options kernel/Kconfig-extra.xx
--- linux-2.6.7-rc3-xx4/kernel/Kconfig-extra.xx~compiler-options	2004-06-14 05:15:23.782309712 -0400
+++ linux-2.6.7-rc3-xx4-xiphux/kernel/Kconfig-extra.xx	2004-06-14 05:17:50.357026968 -0400
@@ -268,4 +268,49 @@ config SILENT_BOOT
 
 	  If unsure, say N.
 
+menu "Compiler options"
+
+config CFLAGS_EDIT
+	bool "CFLAGS hacking"
+	default n
+	help
+	  This allows you to append to or override the CFLAGS set for your
+	  machine. Changing CFLAGS is commonly a very bad idea, because
+	  Kernel Hackers Know Best. However if you wish to mess around
+	  with your CFLAGS anyway, enable this and enter your CFLAGS
+	  string to append below.
+
+	  The original intent of this option is to allow for use of flags that
+	  don't really affect the result so much as gcc itself - maybe you
+	  don't want to guess branch probabilities for some reason. That said,
+	  we recognize that there's a nicely sized market for people who just
+	  want to tinker, and this is why this option exists.
+
+	  A lot of things may become unpredictable when using aggressive CFLAGS
+	  in the kernel. Don't complain about _anything_ until disabling this
+	  option.
+
+	  If you have any doubt, say N.
+
+config CFLAGS_STRING
+	string "New CFLAGS"
+	depends on CFLAGS_EDIT
+	default "CHANGE ME"
+	help
+	  Enter your new CFLAGS here, using appropriate syntax for gcc. If you
+	  don't know what this means, flee now.
+
+config CFLAGS_OVERRIDE
+	bool "Override existing CFLAGS"
+	depends on CFLAGS_EDIT
+	default n
+	help
+	  This allows you to unset any CFLAGS generated from processor selections
+	  made at the top of the config.
+
+	  There is no reason to enable this. You always want the bare minimum for
+	  your processor. Say N.
+
+endmenu
+
 endmenu
diff -puN arch/i386/Kconfig~compiler-options arch/i386/Kconfig
--- linux-2.6.7-rc3-xx4/arch/i386/Kconfig~compiler-options	2004-06-14 05:15:55.800442216 -0400
+++ linux-2.6.7-rc3-xx4-xiphux/arch/i386/Kconfig	2004-06-14 05:17:19.099778792 -0400
@@ -1409,47 +1409,6 @@ config DEBUG_SLAB
 	  allocation as well as poisoning memory on free to catch use of freed
 	  memory.
 
-config CFLAGS_EDIT
-	bool "CFLAGS hacking"
-	default n
-	help
-	  This allows you to append to or override the CFLAGS set for your
-	  machine. Changing CFLAGS is commonly a very bad idea, because
-	  Kernel Hackers Know Best. However if you wish to mess around
-	  with your CFLAGS anyway, enable this and enter your CFLAGS
-	  string to append below.
-
-	  The original intent of this option is to allow for use of flags that
-	  don't really affect the result so much as gcc itself - maybe you
-	  don't want to guess branch probabilities for some reason. That said,
-	  we recognize that there's a nicely sized market for people who just
-	  want to tinker, and this is why this option exists.
-
-	  A lot of things may become unpredictable when using aggressive CFLAGS
-	  in the kernel. Don't complain about _anything_ until disabling this
-	  option.
-
-	  If you have any doubt, say N.
-
-config CFLAGS_STRING
-	string "New CFLAGS"
-	depends on CFLAGS_EDIT
-	default "CHANGE ME"
-	help
-	  Enter your new CFLAGS here, using appropriate syntax for gcc. If you
-	  don't know what this means, flee now.
-
-config CFLAGS_OVERRIDE
-	bool "Override existing CFLAGS"
-	depends on CFLAGS_EDIT
-	default n
-	help
-	  This allows you to unset any CFLAGS generated from processor selections
-	  made at the top of the config.
-
-	  There is no reason to enable this. You always want the bare minimum for
-	  your processor. Say N.
-
 config MAGIC_SYSRQ
 	bool "Magic SysRq key"
 	depends on DEBUG_KERNEL
diff -puN arch/x86_64/Kconfig~compiler-options arch/x86_64/Kconfig
--- linux-2.6.7-rc3-xx4/arch/x86_64/Kconfig~compiler-options	2004-06-14 05:16:02.720390224 -0400
+++ linux-2.6.7-rc3-xx4-xiphux/arch/x86_64/Kconfig	2004-06-14 05:17:36.218176400 -0400
@@ -487,47 +487,6 @@ config FRAME_POINTER
 	 frame pointer through inline assembly (semaphores etc.)
 	 Normally you should say N.
 
-config CFLAGS_EDIT
-	bool "CFLAGS hacking"
-	default n
-	help
-	  This allows you to append to or override the CFLAGS set for your
-	  machine. Changing CFLAGS is commonly a very bad idea, because
-	  Kernel Hackers Know Best. However if you wish to mess around
-	  with your CFLAGS anyway, enable this and enter your CFLAGS
-	  string to append below.
-
-	  The original intent of this option is to allow for use of flags that
-	  don't really affect the result so much as gcc itself - maybe you
-	  don't want to guess branch probabilities for some reason. That said,
-	  we recognize that there's a nicely sized market for people who just
-	  want to tinker, and this is why this option exists.
-
-	  A lot of things may become unpredictable when using aggressive CFLAGS
-	  in the kernel. Don't complain about _anything_ until disabling this
-	  option.
-
-	  If you have any doubt, say N.
-
-config CFLAGS_STRING
-	string "New CFLAGS"
-	depends on CFLAGS_EDIT
-	default "CHANGE ME"
-	help
-	  Enter your new CFLAGS here, using appropriate syntax for gcc. If you
-	  don't know what this means, flee now.
-
-config CFLAGS_OVERRIDE
-	bool "Override existing CFLAGS"
-	depends on CFLAGS_EDIT
-	default n
-	help
-	  This allows you to unset any CFLAGS generated from processor selections
-	  made at the top of the config.
-
-	  There is no reason to enable this. You always want the bare minimum for
-	  your processor. Say N.
-
 config IOMMU_DEBUG
        depends on GART_IOMMU && DEBUG_KERNEL
        bool "Enable IOMMU debugging"

_
