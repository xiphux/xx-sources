
From: Dave Hansen <haveblue@us.ibm.com>

Looks like I missed a couple of architectures.  This patch, on top of my
previous one and Jesse's should clean up the rest.

Signed-off-by: Andrew Morton <akpm@osdl.org>
Index: xx-sources/arch/arm/mm/init.c
===================================================================
--- xx-sources.orig/arch/arm/mm/init.c	2004-08-14 01:36:14.000000000 -0400
+++ xx-sources/arch/arm/mm/init.c	2004-08-14 13:29:25.721169584 -0400
@@ -495,7 +495,7 @@
 		 */
 		arch_adjust_zones(node, zone_size, zhole_size);
 
-		free_area_init_node(node, pgdat, NULL, zone_size,
+		free_area_init_node(node, pgdat, zone_size,
 				bdata->node_boot_start >> PAGE_SHIFT, zhole_size);
 	}
 
Index: xx-sources/arch/ia64/mm/contig.c
===================================================================
--- xx-sources.orig/arch/ia64/mm/contig.c	2004-08-14 13:29:03.681520120 -0400
+++ xx-sources/arch/ia64/mm/contig.c	2004-08-14 13:29:25.722169432 -0400
@@ -267,7 +267,7 @@
 	efi_memmap_walk(find_largest_hole, (u64 *)&max_gap);
 	if (max_gap < LARGE_GAP) {
 		vmem_map = (struct page *) 0;
-		free_area_init_node(0, &contig_page_data, NULL, zones_size, 0,
+		free_area_init_node(0, &contig_page_data, zones_size, 0,
 				    zholes_size);
 		mem_map = contig_page_data.node_mem_map;
 	} else {
Index: xx-sources/arch/mips/sgi-ip27/ip27-memory.c
===================================================================
--- xx-sources.orig/arch/mips/sgi-ip27/ip27-memory.c	2004-08-14 01:36:33.000000000 -0400
+++ xx-sources/arch/mips/sgi-ip27/ip27-memory.c	2004-08-14 13:29:25.723169280 -0400
@@ -225,7 +225,7 @@
 		pfn_t end_pfn = node_getmaxclick(node) + 1;
 
 		zones_size[ZONE_DMA] = end_pfn - start_pfn;
-		free_area_init_node(node, NODE_DATA(node), NULL,
+		free_area_init_node(node, NODE_DATA(node),
 				zones_size, start_pfn, NULL);
 
 		if (end_pfn > max_low_pfn)
Index: xx-sources/arch/sparc/mm/srmmu.c
===================================================================
--- xx-sources.orig/arch/sparc/mm/srmmu.c	2004-08-14 01:37:14.000000000 -0400
+++ xx-sources/arch/sparc/mm/srmmu.c	2004-08-14 13:29:25.736167304 -0400
@@ -1341,7 +1341,7 @@
 		zones_size[ZONE_HIGHMEM] = npages;
 		zholes_size[ZONE_HIGHMEM] = npages - calc_highpages();
 
-		free_area_init_node(0, &contig_page_data, NULL, zones_size,
+		free_area_init_node(0, &contig_page_data, zones_size,
 				    pfn_base, zholes_size);
 		mem_map = contig_page_data.node_mem_map;
 	}
Index: xx-sources/arch/sparc/mm/sun4c.c
===================================================================
--- xx-sources.orig/arch/sparc/mm/sun4c.c	2004-08-14 13:27:28.479992952 -0400
+++ xx-sources/arch/sparc/mm/sun4c.c	2004-08-14 13:29:25.738167000 -0400
@@ -2114,7 +2114,7 @@
 		zones_size[ZONE_HIGHMEM] = npages;
 		zholes_size[ZONE_HIGHMEM] = npages - calc_highpages();
 
-		free_area_init_node(0, &contig_page_data, NULL, zones_size,
+		free_area_init_node(0, &contig_page_data, zones_size,
 				    pfn_base, zholes_size);
 		mem_map = contig_page_data.node_mem_map;
 	}
Index: xx-sources/arch/sparc64/mm/init.c
===================================================================
--- xx-sources.orig/arch/sparc64/mm/init.c	2004-08-14 01:36:56.000000000 -0400
+++ xx-sources/arch/sparc64/mm/init.c	2004-08-14 13:29:25.731168064 -0400
@@ -1502,7 +1502,7 @@
 		zones_size[ZONE_DMA] = npages;
 		zholes_size[ZONE_DMA] = npages - pages_avail;
 
-		free_area_init_node(0, &contig_page_data, NULL, zones_size,
+		free_area_init_node(0, &contig_page_data, zones_size,
 				    phys_base >> PAGE_SHIFT, zholes_size);
 		mem_map = contig_page_data.node_mem_map;
 	}
Index: xx-sources/arch/x86_64/mm/numa.c
===================================================================
--- xx-sources.orig/arch/x86_64/mm/numa.c	2004-08-14 13:26:39.331464664 -0400
+++ xx-sources/arch/x86_64/mm/numa.c	2004-08-14 13:29:25.739166848 -0400
@@ -136,7 +136,7 @@
 		zones[ZONE_NORMAL] = end_pfn - start_pfn; 
 	} 
     
-	free_area_init_node(nodeid, NODE_DATA(nodeid), NULL, zones, 
+	free_area_init_node(nodeid, NODE_DATA(nodeid), zones,
 			    start_pfn, NULL); 
 } 
 
