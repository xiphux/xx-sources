
From: Ingo Molnar <mingo@elte.hu>

 - fix two stale comments
 - cleanup

Signed-off-by: Ingo Molnar <mingo@elte.hu>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/kernel/sched.c |    8 +++-----
 1 files changed, 3 insertions(+), 5 deletions(-)

diff -puN kernel/sched.c~sched-misc-cleanups-2 kernel/sched.c
--- 25/kernel/sched.c~sched-misc-cleanups-2	2004-07-13 13:17:28.340126176 -0700
+++ 25-akpm/kernel/sched.c	2004-07-13 13:17:28.346125264 -0700
@@ -873,8 +873,7 @@ static int find_idlest_cpu(struct task_s
 
 /*
  * Perform scheduler related setup for a newly forked process p.
- * p is forked by current. It also does runqueue balancing.
- * The cpu hotplug lock is held.
+ * p is forked by current. The cpu hotplug lock is held.
  */
 void fastcall sched_fork(task_t *p, unsigned long clone_flags)
 {
@@ -1007,10 +1006,9 @@ void fastcall wake_up_new_task(task_t * 
 				rq->nr_running++;
 			}
 			set_need_resched();
-		} else {
+		} else
 			/* Run child last */
 			__activate_task(p, rq);
-		}
 	} else {
 		runqueue_t *this_rq = cpu_rq(this_cpu);
 
@@ -3375,7 +3373,7 @@ EXPORT_SYMBOL_GPL(set_cpus_allowed);
  * Move (not current) task off this cpu, onto dest cpu.  We're doing
  * this because either it can't run here any more (set_cpus_allowed()
  * away from this CPU, or CPU going down), or because we're
- * attempting to rebalance this task on exec (sched_balance_exec).
+ * attempting to rebalance this task on exec (sched_exec).
  *
  * So we race with normal scheduler movements, but that's OK, as long
  * as the task is no longer on this CPU.
_
