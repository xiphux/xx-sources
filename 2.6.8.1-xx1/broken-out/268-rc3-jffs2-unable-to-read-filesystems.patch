
From: David Woodhouse <dwmw2@infradead.org>

On Sat, 2004-08-07 at 14:18 +0100, Russell King wrote:
> This can be seen by tracing through the code from jffs2_alloc_raw_inode()
> and noticing that previous implementations do not initialise this field -
> AFAICS kmem_cache_alloc() does not guarantee that memory returned by
> this function will be initialised.

Doh.

> Therefore, recent 2.6.8-rc kernels must _NOT_ use this field if they
> wish to remain compatible with existing jffs2 filesystems.

The format is compatible in theory -- we just need to work around the
bug in the older code. Can you try this?

Signed-off-by: Andrew Morton <akpm@osdl.org>
Index: xx-sources/fs/jffs2/compr.c
===================================================================
--- xx-sources.orig/fs/jffs2/compr.c	2004-08-12 04:47:16.211208064 -0400
+++ xx-sources/fs/jffs2/compr.c	2004-08-12 04:58:18.387541960 -0400
@@ -180,6 +180,11 @@
         struct jffs2_compressor *this;
         int ret;
 
+	/* Older code had a bug where it would write non-zero 'usercompr'
+	   fields. Deal with it. */
+	if ((comprtype & 0xff) <= JFFS2_COMPR_ZLIB)
+		comprtype &= 0xff;
+
 	switch (comprtype & 0xff) {
 	case JFFS2_COMPR_NONE:
 		/* This should be special-cased elsewhere, but we might as well deal with it */
@@ -208,7 +213,7 @@
                                 return ret;
                         }
                 }
-		printk(KERN_WARNING "JFFS2 compression type 0x%02x not avaiable.\n", comprtype);
+		printk(KERN_WARNING "JFFS2 compression type 0x%02x not available.\n", comprtype);
                 spin_unlock(&jffs2_compressor_list_lock);
 		return -EIO;
 	}
