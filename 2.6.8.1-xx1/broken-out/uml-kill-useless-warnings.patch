
From: <blaisorblade_spam@yahoo.it>

Fixes some little warnings about "Defined but not used ..." by #ifdef'ing
things

Signed-off-by: Paolo 'Blaisorblade' Giarrusso <blaisorblade_spam@yahoo.it>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/arch/um/kernel/time.c      |    1 +
 25-akpm/arch/um/kernel/time_kern.c |    4 +++-
 25-akpm/fs/hostfs/hostfs_kern.c    |    2 ++
 3 files changed, 6 insertions(+), 1 deletion(-)

diff -puN arch/um/kernel/time.c~uml-kill-useless-warnings arch/um/kernel/time.c
--- 25/arch/um/kernel/time.c~uml-kill-useless-warnings	2004-07-05 16:00:40.908801368 -0700
+++ 25-akpm/arch/um/kernel/time.c	2004-07-05 16:00:40.915800304 -0700
@@ -10,6 +10,7 @@
 #include <sys/time.h>
 #include <signal.h>
 #include <errno.h>
+#include <string.h>
 #include "user_util.h"
 #include "kern_util.h"
 #include "user.h"
diff -puN arch/um/kernel/time_kern.c~uml-kill-useless-warnings arch/um/kernel/time_kern.c
--- 25/arch/um/kernel/time_kern.c~uml-kill-useless-warnings	2004-07-05 16:00:40.909801216 -0700
+++ 25-akpm/arch/um/kernel/time_kern.c	2004-07-05 16:00:40.915800304 -0700
@@ -43,7 +43,9 @@ int timer_irq_inited = 0;
 
 static int first_tick;
 static unsigned long long prev_tsc;
+#ifdef CONFIG_UML_REAL_TIME_CLOCK
 static long long delta;   		/* Deviation per interval */
+#endif
 
 extern unsigned long long host_hz;
 
@@ -59,7 +61,7 @@ void timer_irq(union uml_pt_regs *regs)
 	}
 
 	if(first_tick){
-#if defined(CONFIG_UML_REAL_TIME_CLOCK)
+#ifdef CONFIG_UML_REAL_TIME_CLOCK
 		unsigned long long tsc;
 		/* We've had 1 tick */
 		tsc = time_stamp();
diff -puN fs/hostfs/hostfs_kern.c~uml-kill-useless-warnings fs/hostfs/hostfs_kern.c
--- 25/fs/hostfs/hostfs_kern.c~uml-kill-useless-warnings	2004-07-05 16:00:40.911800912 -0700
+++ 25-akpm/fs/hostfs/hostfs_kern.c	2004-07-05 16:00:40.916800152 -0700
@@ -59,6 +59,7 @@ static struct inode_operations hostfs_io
 static struct inode_operations hostfs_dir_iops;
 static struct address_space_operations hostfs_link_aops;
 
+#ifndef MODULE
 static int __init hostfs_args(char *options, int *add)
 {
 	char *ptr;
@@ -95,6 +96,7 @@ __uml_setup("hostfs=", hostfs_args,
 "    The only flag currently supported is 'append', which specifies that all\n"
 "    files opened by hostfs will be opened in append mode.\n\n"
 );
+#endif
 
 static char *dentry_name(struct dentry *dentry, int extra)
 {
_
