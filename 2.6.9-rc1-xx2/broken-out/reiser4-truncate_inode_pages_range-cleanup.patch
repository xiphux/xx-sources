

Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/mm/truncate.c |    6 ++----
 1 files changed, 2 insertions(+), 4 deletions(-)

diff -puN mm/truncate.c~reiser4-truncate_inode_pages_range-cleanup mm/truncate.c
--- 25/mm/truncate.c~reiser4-truncate_inode_pages_range-cleanup	Wed Aug 18 16:50:47 2004
+++ 25-akpm/mm/truncate.c	Wed Aug 18 16:51:04 2004
@@ -110,7 +110,8 @@ invalidate_complete_page(struct address_
  * mapping is large, it is probably the case that the final pages are the most
  * recently touched, and freeing happens in ascending file offset order.
  */
-void truncate_inode_pages_range(struct address_space *mapping, loff_t lstart, loff_t lend)
+void truncate_inode_pages_range(struct address_space *mapping,
+				loff_t lstart, loff_t lend)
 {
 	const pgoff_t start = (lstart + PAGE_CACHE_SIZE-1) >> PAGE_CACHE_SHIFT;
 	pgoff_t end;
@@ -193,7 +194,6 @@ void truncate_inode_pages_range(struct a
 		pagevec_release(&pvec);
 	}
 }
-
 EXPORT_SYMBOL(truncate_inode_pages_range);
 
 /**
@@ -207,10 +207,8 @@ void truncate_inode_pages(struct address
 {
 	truncate_inode_pages_range(mapping, lstart, (loff_t)-1);
 }
-
 EXPORT_SYMBOL(truncate_inode_pages);
 
-
 /**
  * invalidate_mapping_pages - Invalidate all the unlocked pages of one inode
  * @mapping: the address_space which holds the pages to invalidate
_
