
From: Alexander Nyberg <alexn@telia.com>

Fix another oops due to incorrect sectioning.

Signed-off-by: Alexander Nyberg <alexn@telia.com>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/arch/x86_64/kernel/io_apic.c |    8 ++------
 1 files changed, 2 insertions(+), 6 deletions(-)

diff -puN arch/x86_64/kernel/io_apic.c~assign_irq_vector-section-fix arch/x86_64/kernel/io_apic.c
--- 25/arch/x86_64/kernel/io_apic.c~assign_irq_vector-section-fix	2004-08-23 16:17:30.320205216 -0700
+++ 25-akpm/arch/x86_64/kernel/io_apic.c	2004-08-23 16:30:49.762671488 -0700
@@ -80,7 +80,7 @@ int vector_irq[NR_VECTORS] = { [0 ... NR
  * shared ISA-space IRQs, so we have to support them. We are super
  * fast in the common case, and fast for shared ISA-space IRQs.
  */
-static void __init add_pin_to_irq(unsigned int irq, int apic, int pin)
+static void add_pin_to_irq(unsigned int irq, int apic, int pin)
 {
 	static int first_free_entry = NR_IRQS;
 	struct irq_pin_list *entry = irq_2_pin + irq;
@@ -329,7 +329,7 @@ static int __init find_irq_entry(int api
 /*
  * Find the pin to which IRQ[irq] (ISA) is connected
  */
-static int __init find_isa_irq_pin(int irq, int type)
+static int find_isa_irq_pin(int irq, int type)
 {
 	int i;
 
@@ -656,11 +656,7 @@ static inline int IO_APIC_irq_trigger(in
 /* irq_vectors is indexed by the sum of all RTEs in all I/O APICs. */
 u8 irq_vector[NR_IRQ_VECTORS] = { FIRST_DEVICE_VECTOR , 0 };
 
-#ifdef CONFIG_PCI_MSI
 int assign_irq_vector(int irq)
-#else
-int __init assign_irq_vector(int irq)
-#endif
 {
 	static int current_vector = FIRST_DEVICE_VECTOR, offset = 0;
 
_
