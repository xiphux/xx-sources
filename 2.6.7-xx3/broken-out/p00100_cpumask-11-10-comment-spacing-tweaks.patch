
From: Paul Jackson <pj@sgi.com>

Tweak cpumask.h comments, spacing:

- Add comments for cpu_present_map macros: num_present_cpus() and
  cpu_present()

- Remove comments for obsolete macros: cpu_set_online(),
  cpu_set_offline()

- Reorder a few comment lines, to match the code and confuse readers of
  this patch

- Tabify one chunk of code

Signed-off-by: Paul Jackson <pj@sgi.com>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/include/linux/cpumask.h |   34 +++++++++++++++++++---------------
 1 files changed, 19 insertions(+), 15 deletions(-)

diff -puN include/linux/cpumask.h~cpumask-11-10-comment-spacing-tweaks include/linux/cpumask.h
--- 25/include/linux/cpumask.h~cpumask-11-10-comment-spacing-tweaks	2004-06-08 22:55:38.527454624 -0700
+++ 25-akpm/include/linux/cpumask.h	2004-06-08 22:55:38.531454016 -0700
@@ -47,17 +47,21 @@
  * int cpumask_scnprintf(buf, len, mask) Format cpumask for printing
  * int cpumask_parse(ubuf, ulen, mask)	Parse ascii string as cpumask
  *
+ * for_each_cpu_mask(cpu, mask)		for-loop cpu over mask
+ *
  * int num_online_cpus()		Number of online CPUs
  * int num_possible_cpus()		Number of all possible CPUs
+ * int num_present_cpus()		Number of present CPUs
+ *
  * int cpu_online(cpu)			Is some cpu online?
  * int cpu_possible(cpu)		Is some cpu possible?
- * void cpu_set_online(cpu)		set cpu in cpu_online_map
- * void cpu_set_offline(cpu)		clear cpu in cpu_online_map
+ * int cpu_present(cpu)			Is some cpu present (can schedule)?
+ *
  * int any_online_cpu(mask)		First online cpu in mask
  *
- * for_each_cpu_mask(cpu, mask)		for-loop cpu over mask
  * for_each_cpu(cpu)			for-loop cpu over cpu_possible_map
  * for_each_online_cpu(cpu)		for-loop cpu over cpu_online_map
+ * for_each_present_cpu(cpu)		for-loop cpu over cpu_present_map
  *
  * Subtlety:
  * 1) The 'type-checked' form of cpu_isset() causes gcc (3.3.2, anyway)
@@ -336,19 +340,19 @@ extern cpumask_t cpu_online_map;
 extern cpumask_t cpu_present_map;
 
 #if NR_CPUS > 1
-#define num_online_cpus()    cpus_weight(cpu_online_map)
-#define num_possible_cpus()  cpus_weight(cpu_possible_map)
-#define num_present_cpus()   cpus_weight(cpu_present_map)
-#define cpu_online(cpu)      cpu_isset((cpu), cpu_online_map)
-#define cpu_possible(cpu)    cpu_isset((cpu), cpu_possible_map)
-#define cpu_present(cpu)     cpu_isset((cpu), cpu_present_map)
+#define num_online_cpus()	cpus_weight(cpu_online_map)
+#define num_possible_cpus()	cpus_weight(cpu_possible_map)
+#define num_present_cpus()	cpus_weight(cpu_present_map)
+#define cpu_online(cpu)		cpu_isset((cpu), cpu_online_map)
+#define cpu_possible(cpu)	cpu_isset((cpu), cpu_possible_map)
+#define cpu_present(cpu)	cpu_isset((cpu), cpu_present_map)
 #else
-#define num_online_cpus()    1
-#define num_possible_cpus()  1
-#define num_present_cpus()   1
-#define cpu_online(cpu)      ((cpu) == 0)
-#define cpu_possible(cpu)    ((cpu) == 0)
-#define cpu_present(cpu)     ((cpu) == 0)
+#define num_online_cpus()	1
+#define num_possible_cpus()	1
+#define num_present_cpus()	1
+#define cpu_online(cpu)		((cpu) == 0)
+#define cpu_possible(cpu)	((cpu) == 0)
+#define cpu_present(cpu)	((cpu) == 0)
 #endif
 
 #define any_online_cpu(mask)			\
_
