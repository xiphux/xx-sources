

In file included from arch/x86_64/kernel/asm-offsets.c:7:
include/linux/sched.h: In function `arch_pick_mmap_layout':
include/linux/sched.h:213: dereferencing pointer to incomplete type
include/linux/sched.h:213: dereferencing pointer to incomplete type
include/linux/sched.h:214: dereferencing pointer to incomplete type

Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/include/linux/sched.h |   20 ++++++++++----------
 1 files changed, 10 insertions(+), 10 deletions(-)

diff -puN include/linux/sched.h~flexible-mmap-267-mm1-a0-fix include/linux/sched.h
--- 25/include/linux/sched.h~flexible-mmap-267-mm1-a0-fix	2004-06-23 21:44:45.096210168 -0700
+++ 25-akpm/include/linux/sched.h	2004-06-23 21:44:45.101209408 -0700
@@ -197,16 +197,6 @@ get_unmapped_area_topdown(struct file *f
 			  unsigned long len, unsigned long pgoff,
 			  unsigned long flags);
 
-#ifdef HAVE_ARCH_PICK_MMAP_LAYOUT
-extern void arch_pick_mmap_layout(struct mm_struct *mm);
-#else
-static inline void arch_pick_mmap_layout(struct mm_struct *mm)
-{
-	mm->mmap_base = TASK_UNMAPPED_BASE;
-	mm->get_unmapped_area = arch_get_unmapped_area;
-}
-#endif
-
 struct mm_struct {
 	struct vm_area_struct * mmap;		/* list of VMAs */
 	struct rb_root mm_rb;
@@ -1103,6 +1093,16 @@ static inline void set_task_cpu(struct t
 
 #endif /* CONFIG_SMP */
 
+#ifdef HAVE_ARCH_PICK_MMAP_LAYOUT
+extern void arch_pick_mmap_layout(struct mm_struct *mm);
+#else
+static inline void arch_pick_mmap_layout(struct mm_struct *mm)
+{
+	mm->mmap_base = TASK_UNMAPPED_BASE;
+	mm->get_unmapped_area = arch_get_unmapped_area;
+}
+#endif
+
 #endif /* __KERNEL__ */
 
 #endif
_
