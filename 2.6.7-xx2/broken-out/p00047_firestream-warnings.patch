

drivers/atm/firestream.c: In function `aligned_kmalloc':
drivers/atm/firestream.c:1383: warning: cast from pointer to integer of different size
drivers/atm/firestream.c: In function `top_off_fp':
drivers/atm/firestream.c:1499: warning: cast to pointer from integer of different size

(The cast of a readl result to a kernel pointer in top_off_fp() is worrisome)


---

 25-x86_64-akpm/drivers/atm/firestream.c |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff -puN drivers/atm/firestream.c~firestream-warnings drivers/atm/firestream.c
--- 25-x86_64/drivers/atm/firestream.c~firestream-warnings	Fri Apr  9 01:29:04 2004
+++ 25-x86_64-akpm/drivers/atm/firestream.c	Fri Apr  9 01:32:06 2004
@@ -576,7 +576,7 @@ static inline void write_fs (struct fs_d
 }
 
 
-static inline u32  read_fs (struct fs_dev *dev, int offset)
+static inline u32 read_fs (struct fs_dev *dev, int offset)
 {
 	return readl (dev->base + offset);
 }
@@ -1380,7 +1380,7 @@ static void __devinit *aligned_kmalloc (
 
 	if (alignment <= 0x10) {
 		t = kmalloc (size, flags);
-		if ((unsigned int)t & (alignment-1)) {
+		if ((unsigned long)t & (alignment-1)) {
 			printk ("Kmalloc doesn't align things correctly! %p\n", t);
 			kfree (t);
 			return aligned_kmalloc (size, flags, alignment * 4);
@@ -1496,7 +1496,7 @@ static void top_off_fp (struct fs_dev *d
 		ne->skb = skb;
 		ne->fp = fp;
 
-		qe = (struct FS_BPENTRY *) (read_fs (dev, FP_EA(fp->offset)));
+		qe = (struct FS_BPENTRY *)(long)(read_fs (dev, FP_EA(fp->offset)));
 		fs_dprintk (FS_DEBUG_QUEUE, "link at %p\n", qe);
 		if (qe) {
 			qe = bus_to_virt ((long) qe);

_
