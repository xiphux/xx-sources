
From: Roland McGrath <roland@redhat.com>

I don't know why struct k_itimer was ever declared in sched.h; perhaps at
one time it was referenced by something else there.  There is no need for
it now.  This patch moves the struct where it belongs, in
linux/posix-timers.h.  It has zero effect on anything except keeping the
source easier to read.

Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/include/linux/posix-timers.h |   20 ++++++++++++++++++++
 25-akpm/include/linux/sched.h        |   20 --------------------
 2 files changed, 20 insertions(+), 20 deletions(-)

diff -puN include/linux/posix-timers.h~move-struct-k_itimer-out-of-linux-schedh include/linux/posix-timers.h
--- 25/include/linux/posix-timers.h~move-struct-k_itimer-out-of-linux-schedh	2004-09-30 22:37:31.636940672 -0700
+++ 25-akpm/include/linux/posix-timers.h	2004-09-30 22:37:31.641939912 -0700
@@ -4,6 +4,26 @@
 #include <linux/spinlock.h>
 #include <linux/list.h>
 
+/* POSIX.1b interval timer structure. */
+struct k_itimer {
+	struct list_head list;		/* free/ allocate list */
+	spinlock_t it_lock;
+	clockid_t it_clock;		/* which timer type */
+	timer_t it_id;			/* timer id */
+	int it_overrun;			/* overrun on pending signal  */
+	int it_overrun_last;		/* overrun on last delivered signal */
+	int it_requeue_pending;         /* waiting to requeue this timer */
+	int it_sigev_notify;		/* notify word of sigevent struct */
+	int it_sigev_signo;		/* signo word of sigevent struct */
+	sigval_t it_sigev_value;	/* value word of sigevent struct */
+	unsigned long it_incr;		/* interval specified in jiffies */
+	struct task_struct *it_process;	/* process to send signal to */
+	struct timer_list it_timer;
+	struct sigqueue *sigq;		/* signal queue entry. */
+	struct list_head abs_timer_entry; /* clock abs_timer_list */
+	struct timespec wall_to_prev;   /* wall_to_monotonic used when set */
+};
+
 struct k_clock_abs {
 	struct list_head list;
 	spinlock_t lock;
diff -puN include/linux/sched.h~move-struct-k_itimer-out-of-linux-schedh include/linux/sched.h
--- 25/include/linux/sched.h~move-struct-k_itimer-out-of-linux-schedh	2004-09-30 22:37:31.638940368 -0700
+++ 25-akpm/include/linux/sched.h	2004-09-30 22:37:31.642939760 -0700
@@ -376,26 +376,6 @@ typedef struct runqueue runqueue_t;
 struct backing_dev_info;
 struct reclaim_state;
 
-/* POSIX.1b interval timer structure. */
-struct k_itimer {
-	struct list_head list;		 /* free/ allocate list */
-	spinlock_t it_lock;
-	clockid_t it_clock;		/* which timer type */
-	timer_t it_id;			/* timer id */
-	int it_overrun;			/* overrun on pending signal  */
-	int it_overrun_last;		 /* overrun on last delivered signal */
-	int it_requeue_pending;          /* waiting to requeue this timer */
-	int it_sigev_notify;		 /* notify word of sigevent struct */
-	int it_sigev_signo;		 /* signo word of sigevent struct */
-	sigval_t it_sigev_value;	 /* value word of sigevent struct */
-	unsigned long it_incr;		/* interval specified in jiffies */
-	struct task_struct *it_process;	/* process to send signal to */
-	struct timer_list it_timer;
-	struct sigqueue *sigq;		/* signal queue entry. */
-	struct list_head abs_timer_entry; /* clock abs_timer_list */
-	struct timespec wall_to_prev;   /* wall_to_monotonic used when set */
-};
-
 #ifdef CONFIG_SCHEDSTATS
 struct sched_info {
 	/* cumulative counters */
_
