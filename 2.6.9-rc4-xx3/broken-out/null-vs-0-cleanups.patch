
From: Geert Uytterhoeven <geert@linux-m68k.org>

A few more NULL vs. 0 cleanups, as detected by sparse.

Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/arch/m68k/kernel/setup.c                 |    2 +-
 25-akpm/arch/m68k/mm/memory.c                    |    2 +-
 25-akpm/drivers/char/amiserial.c                 |   12 ++++++------
 25-akpm/include/asm-generic/dma-mapping-broken.h |    2 +-
 4 files changed, 9 insertions(+), 9 deletions(-)

diff -puN arch/m68k/kernel/setup.c~null-vs-0-cleanups arch/m68k/kernel/setup.c
--- 25/arch/m68k/kernel/setup.c~null-vs-0-cleanups	2004-10-02 18:41:05.425979568 -0700
+++ 25-akpm/arch/m68k/kernel/setup.c	2004-10-02 18:41:05.433978352 -0700
@@ -352,7 +352,7 @@ void __init setup_arch(char **cmdline_p)
 #ifndef CONFIG_SUN3
 	startmem= m68k_memory[0].addr;
 	endmem = startmem + m68k_memory[0].size;
-	high_memory = PAGE_OFFSET;
+	high_memory = (void *)PAGE_OFFSET;
 	for (i = 0; i < m68k_num_memory; i++) {
 		m68k_memory[i].size &= MASK_256K;
 		if (m68k_memory[i].addr < startmem)
diff -puN arch/m68k/mm/memory.c~null-vs-0-cleanups arch/m68k/mm/memory.c
--- 25/arch/m68k/mm/memory.c~null-vs-0-cleanups	2004-10-02 18:41:05.426979416 -0700
+++ 25-akpm/arch/m68k/mm/memory.c	2004-10-02 18:41:05.434978200 -0700
@@ -77,7 +77,7 @@ pmd_t *get_pointer_table (void)
 		ptable_desc *new;
 
 		if (!(page = (void *)get_zeroed_page(GFP_KERNEL)))
-			return 0;
+			return NULL;
 
 		flush_tlb_kernel_page(page);
 		nocache_page(page);
diff -puN drivers/char/amiserial.c~null-vs-0-cleanups drivers/char/amiserial.c
--- 25/drivers/char/amiserial.c~null-vs-0-cleanups	2004-10-02 18:41:05.428979112 -0700
+++ 25-akpm/drivers/char/amiserial.c	2004-10-02 18:41:05.436977896 -0700
@@ -646,7 +646,7 @@ static int startup(struct async_struct *
 	/*
 	 * and set the speed of the serial port
 	 */
-	change_speed(info, 0);
+	change_speed(info, NULL);
 
 	info->flags |= ASYNC_INITIALIZED;
 	local_irq_restore(flags);
@@ -692,7 +692,7 @@ static void shutdown(struct async_struct
 
 	if (info->xmit.buf) {
 		free_page((unsigned long) info->xmit.buf);
-		info->xmit.buf = 0;
+		info->xmit.buf = NULL;
 	}
 
 	info->IER = 0;
@@ -1206,7 +1206,7 @@ check_and_exit:
 				info->tty->alt_speed = 230400;
 			if ((state->flags & ASYNC_SPD_MASK) == ASYNC_SPD_WARP)
 				info->tty->alt_speed = 460800;
-			change_speed(info, 0);
+			change_speed(info, NULL);
 		}
 	} else
 		retval = startup(info);
@@ -1561,7 +1561,7 @@ static void rs_close(struct tty_struct *
 	tty_ldisc_flush(tty);
 	tty->closing = 0;
 	info->event = 0;
-	info->tty = 0;
+	info->tty = NULL;
 	if (info->blocked_open) {
 		if (info->close_delay) {
 			msleep_interruptible(jiffies_to_msecs(info->close_delay));
@@ -1652,7 +1652,7 @@ static void rs_hangup(struct tty_struct 
 	info->event = 0;
 	state->count = 0;
 	info->flags &= ~ASYNC_NORMAL_ACTIVE;
-	info->tty = 0;
+	info->tty = NULL;
 	wake_up_interruptible(&info->open_wait);
 }
 
@@ -1908,7 +1908,7 @@ static inline int line_info(char *buf, s
 		info->magic = SERIAL_MAGIC;
 		info->flags = state->flags;
 		info->quot = 0;
-		info->tty = 0;
+		info->tty = NULL;
 	}
 	local_irq_save(flags);
 	status = ciab.pra;
diff -puN include/asm-generic/dma-mapping-broken.h~null-vs-0-cleanups include/asm-generic/dma-mapping-broken.h
--- 25/include/asm-generic/dma-mapping-broken.h~null-vs-0-cleanups	2004-10-02 18:41:05.430978808 -0700
+++ 25-akpm/include/asm-generic/dma-mapping-broken.h	2004-10-02 18:41:05.434978200 -0700
@@ -9,7 +9,7 @@ dma_alloc_coherent(struct device *dev, s
 		   int flag)
 {
 	BUG();
-	return 0;
+	return NULL;
 }
 
 static inline void
_
