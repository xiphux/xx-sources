

kernel/posix-timers.c:1347: warning: suggest parentheses around assignment used as truth value
kernel/posix-timers.c:1354: warning: suggest parentheses around assignment used as truth value
kernel/posix-timers.c: At top level:
kernel/posix-timers.c:196: warning: `do_posix_clock_monotonic_settime' declared `static' but never defined


Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/kernel/posix-timers.c |    5 ++---
 1 files changed, 2 insertions(+), 3 deletions(-)

diff -puN kernel/posix-timers.c~posix-compliant-cpu-clocks-warning-fix kernel/posix-timers.c
--- 25/kernel/posix-timers.c~posix-compliant-cpu-clocks-warning-fix	2004-10-06 23:15:45.488847112 -0700
+++ 25-akpm/kernel/posix-timers.c	2004-10-06 23:15:45.492846504 -0700
@@ -193,7 +193,6 @@ static int do_posix_gettime(struct k_clo
 static u64 do_posix_clock_monotonic_gettime_parts(
 	struct timespec *tp, struct timespec *mo);
 int do_posix_clock_monotonic_gettime(struct timespec *tp);
-static int do_posix_clock_monotonic_settime(struct timespec *tp);
 static int do_posix_clock_process_gettime(struct timespec *tp);
 static int do_posix_clock_thread_gettime(struct timespec *tp);
 static struct k_itimer *lock_timer(timer_t timer_id, unsigned long *flags);
@@ -1344,14 +1343,14 @@ sys_clock_gettime(clockid_t which_clock,
 		int pid = -which_clock;
 
 		if (pid < PID_MAX_LIMIT) {
-			if (t = find_task_by_pid(pid)) {
+			if ((t = find_task_by_pid(pid))) {
 				jiffies_to_timespec(process_ticks(t), tp);
 				return 0;
 			}
 			return -EINVAL;
 		}
 		if (pid < 2*PID_MAX_LIMIT) {
-			if (t = find_task_by_pid(pid - PID_MAX_LIMIT)) {
+			if ((t = find_task_by_pid(pid - PID_MAX_LIMIT))) {
 				jiffies_to_timespec(thread_ticks(t), tp);
 				return 0;
 			}
_
