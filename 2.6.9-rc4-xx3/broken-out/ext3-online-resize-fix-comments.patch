
From: Stephen Tweedie <sct@redhat.com>

We've removed dummy on-stack inodes and no longer pass them about during
resize; update the comments to reflect this.

Signed-off-by: Stephen Tweedie <sct@redhat.com>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/fs/ext3/resize.c |    4 ----
 1 files changed, 4 deletions(-)

diff -puN fs/ext3/resize.c~ext3-online-resize-fix-comments fs/ext3/resize.c
--- 25/fs/ext3/resize.c~ext3-online-resize-fix-comments	Fri Oct  1 15:15:02 2004
+++ 25-akpm/fs/ext3/resize.c	Fri Oct  1 15:15:02 2004
@@ -156,8 +156,6 @@ static void mark_bitmap_end(int start_bi
  * changing blocks outside the actual filesystem.  We still do journaling to
  * ensure the recovery is correct in case of a failure just after resize.
  * If any part of this fails, we simply abort the resize.
- *
- * We only pass inode because of the ext3 journal wrappers.
  */
 static int setup_new_group_blocks(struct super_block *sb,
 				  struct ext3_new_group_data *input)
@@ -613,8 +611,6 @@ exit_free:
  * need to worry about last changing from sbi->s_groups_count, because the
  * worst that can happen is that we do not copy the full number of backups
  * at this time.  The resize which changed s_groups_count will backup again.
- *
- * We only pass inode because of the ext3 journal wrappers.
  */
 static void update_backups(struct super_block *sb,
 			   int blk_off, char *data, int size)
_
