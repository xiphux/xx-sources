Index: xx-sources/kernel/Kconfig-extra.xx
===================================================================
--- xx-sources.orig/kernel/Kconfig-extra.xx	2004-08-16 23:22:11.728338864 -0400
+++ xx-sources/kernel/Kconfig-extra.xx	2004-08-16 23:31:37.583315832 -0400
@@ -160,4 +160,50 @@
 
 endchoice
 
+menu "Compiler options"
+
+config CFLAGS_EDIT
+	bool "CFLAGS hacking"
+	depends on X86 || X86_64
+	default n
+	help
+	  This allows you to append to or override the CFLAGS set for your
+	  machine. Changing CFLAGS is commonly a very bad idea, because
+	  Kernel Hackers Know Best. However if you wish to mess around
+	  with your CFLAGS anyway, enable this and enter your CFLAGS
+	  string to append below.
+
+	  The original intent of this option is to allow for use of flags that
+	  don't really affect the result so much as gcc itself - maybe you
+	  don't want to guess branch probabilities for some reason. That said,
+	  we recognize that there's a nicely sized market for people who just
+	  want to tinker, and this is why this option exists.
+
+	  A lot of things may become unpredictable when using aggressive CFLAGS
+	  in the kernel. Don't complain about _anything_ until disabling this
+	  option.
+
+	  If you have any doubt, say N.
+
+config CFLAGS_STRING
+	string "New CFLAGS"
+	depends on CFLAGS_EDIT
+	default "CHANGE ME"
+	help
+	  Enter your new CFLAGS here, using appropriate syntax for gcc. If you
+	  don't know what this means, flee now.
+
+config CFLAGS_OVERRIDE
+	bool "Override existing CFLAGS"
+	depends on CFLAGS_EDIT
+	default n
+	help
+	  This allows you to unset any CFLAGS generated from processor selections
+	  made at the top of the config.
+
+	  There is no reason to enable this. You always want the bare minimum for
+	  your processor. Say N.
+
+endmenu
+
 endmenu
Index: xx-sources/lib/Kconfig.debug
===================================================================
--- xx-sources.orig/lib/Kconfig.debug	2004-08-16 23:25:55.580308192 -0400
+++ xx-sources/lib/Kconfig.debug	2004-08-16 23:31:40.435882176 -0400
@@ -6,48 +6,6 @@
 	  Say Y here if you are developing drivers or trying to debug and
 	  identify kernel problems.
 
-config CFLAGS_EDIT
-	bool "CFLAGS hacking"
-	depends on DEBUG_KERNEL && (X86 || X86_64)
-	default n
-	help
-	  This allows you to append to or override the CFLAGS set for your
-	  machine. Changing CFLAGS is commonly a very bad idea, because
-	  Kernel Hackers Know Best. However if you wish to mess around
-	  with your CFLAGS anyway, enable this and enter your CFLAGS
-	  string to append below.
-
-	  The original intent of this option is to allow for use of flags that
-	  don't really affect the result so much as gcc itself - maybe you
-	  don't want to guess branch probabilities for some reason. That said,
-	  we recognize that there's a nicely sized market for people who just
-	  want to tinker, and this is why this option exists.
-
-	  A lot of things may become unpredictable when using aggressive CFLAGS
-	  in the kernel. Don't complain about _anything_ until disabling this
-	  option.
-
-	  If you have any doubt, say N.
-
-config CFLAGS_STRING
-	string "New CFLAGS"
-	depends on CFLAGS_EDIT
-	default "CHANGE ME"
-	help
-	  Enter your new CFLAGS here, using appropriate syntax for gcc. If you
-	  don't know what this means, flee now.
-
-config CFLAGS_OVERRIDE
-	bool "Override existing CFLAGS"
-	depends on CFLAGS_EDIT
-	default n
-	help
-	  This allows you to unset any CFLAGS generated from processor selections
-	  made at the top of the config.
-
-	  There is no reason to enable this. You always want the bare minimum for
-	  your processor. Say N.
-
 config MAGIC_SYSRQ
 	bool "Magic SysRq key"
 	depends on DEBUG_KERNEL && (ALPHA || ARM || X86 || IA64 || M68K || MIPS || PARISC || PPC32 || PPC64 || ARCH_S390 || SUPERH || SUPERH64 || SPARC32 || SPARC64 || X86_64)
