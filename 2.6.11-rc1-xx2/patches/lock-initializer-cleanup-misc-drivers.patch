
From: Thomas Gleixner <tglx@linutronix.de>

Use the new lock initializers DEFINE_SPIN_LOCK and DEFINE_RW_LOCK

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/drivers/acorn/block/fd1772.c      |    2 +-
 25-akpm/drivers/acorn/block/mfmhd.c       |    2 +-
 25-akpm/drivers/acpi/bus.c                |    2 +-
 25-akpm/drivers/acpi/ec.c                 |    2 +-
 25-akpm/drivers/acpi/event.c              |    2 +-
 25-akpm/drivers/acpi/pci_irq.c            |    2 +-
 25-akpm/drivers/acpi/scan.c               |    2 +-
 25-akpm/drivers/atm/idt77105.c            |    2 +-
 25-akpm/drivers/atm/suni.c                |    2 +-
 25-akpm/drivers/base/class_simple.c       |    2 +-
 25-akpm/drivers/cdrom/aztcd.c             |    2 +-
 25-akpm/drivers/cdrom/cdrom.c             |    2 +-
 25-akpm/drivers/cdrom/cdu31a.c            |    2 +-
 25-akpm/drivers/cdrom/cm206.c             |    2 +-
 25-akpm/drivers/cdrom/gscd.c              |    2 +-
 25-akpm/drivers/cdrom/mcd.c               |    2 +-
 25-akpm/drivers/cdrom/mcdx.c              |    2 +-
 25-akpm/drivers/cdrom/optcd.c             |    2 +-
 25-akpm/drivers/cdrom/sbpcd.c             |    2 +-
 25-akpm/drivers/cdrom/sjcd.c              |    2 +-
 25-akpm/drivers/cdrom/sonycd535.c         |    2 +-
 25-akpm/drivers/cpufreq/cpufreq.c         |    4 ++--
 25-akpm/drivers/firmware/efivars.c        |    2 +-
 25-akpm/drivers/i2c/i2c-dev.c             |    2 +-
 25-akpm/drivers/input/misc/pcspkr.c       |    2 +-
 25-akpm/drivers/input/misc/sparcspkr.c    |    2 +-
 25-akpm/drivers/input/serio/i8042.c       |    2 +-
 25-akpm/drivers/input/serio/q40kbd.c      |    2 +-
 25-akpm/drivers/input/serio/serio.c       |    2 +-
 25-akpm/drivers/macintosh/adb.c           |    2 +-
 25-akpm/drivers/macintosh/adbhid.c        |    2 +-
 25-akpm/drivers/macintosh/macio-adb.c     |    2 +-
 25-akpm/drivers/macintosh/via-cuda.c      |    2 +-
 25-akpm/drivers/macintosh/via-pmu.c       |    2 +-
 25-akpm/drivers/message/fusion/mptlan.c   |    2 +-
 25-akpm/drivers/message/fusion/mptscsih.c |    2 +-
 25-akpm/drivers/oprofile/buffer_sync.c    |    2 +-
 25-akpm/drivers/oprofile/oprofilefs.c     |    2 +-
 25-akpm/drivers/parport/daisy.c           |    2 +-
 25-akpm/drivers/parport/parport_pc.c      |    2 +-
 25-akpm/drivers/parport/share.c           |    4 ++--
 25-akpm/drivers/pcmcia/au1000_generic.c   |    2 +-
 25-akpm/drivers/pcmcia/i82092.c           |    2 +-
 25-akpm/drivers/pcmcia/i82365.c           |    4 ++--
 25-akpm/drivers/pcmcia/m32r_cfc.c         |    2 +-
 25-akpm/drivers/pcmcia/m32r_pcc.c         |    2 +-
 25-akpm/drivers/pcmcia/pd6729.c           |    2 +-
 25-akpm/drivers/pcmcia/soc_common.c       |    2 +-
 25-akpm/drivers/pnp/core.c                |    2 +-
 25-akpm/drivers/s390/block/dasd_devmap.c  |    2 +-
 25-akpm/drivers/s390/char/con3215.c       |    2 +-
 25-akpm/drivers/s390/char/sclp.c          |    2 +-
 25-akpm/drivers/s390/char/tape_core.c     |    2 +-
 25-akpm/drivers/s390/cio/css.c            |    2 +-
 25-akpm/drivers/s390/cio/device_id.c      |    2 +-
 25-akpm/drivers/s390/cio/qdio.c           |    2 +-
 25-akpm/drivers/s390/net/iucv.c           |    4 ++--
 25-akpm/drivers/s390/net/smsgiucv.c       |    2 +-
 25-akpm/drivers/sbus/char/bpp.c           |    2 +-
 25-akpm/drivers/sbus/char/flash.c         |    2 +-
 25-akpm/drivers/sbus/char/jsflash.c       |    2 +-
 25-akpm/drivers/sbus/char/riowatchdog.c   |    2 +-
 25-akpm/drivers/sbus/char/vfc_dev.c       |    2 +-
 25-akpm/drivers/w1/w1.c                   |    2 +-
 25-akpm/drivers/w1/w1_family.c            |    2 +-
 65 files changed, 69 insertions(+), 69 deletions(-)

diff -puN drivers/acorn/block/fd1772.c~lock-initializer-cleanup-misc-drivers drivers/acorn/block/fd1772.c
--- 25/drivers/acorn/block/fd1772.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/acorn/block/fd1772.c	Wed Jan 12 16:55:04 2005
@@ -1522,7 +1522,7 @@ static struct kobject *floppy_find(dev_t
 
 int fd1772_init(void)
 {
-	static spinlock_t lock = SPIN_LOCK_UNLOCKED;
+	static DEFINE_SPINLOCK(lock);
 	int i, err = -ENOMEM;
 
 	if (!machine_is_archimedes())
diff -puN drivers/acorn/block/mfmhd.c~lock-initializer-cleanup-misc-drivers drivers/acorn/block/mfmhd.c
--- 25/drivers/acorn/block/mfmhd.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/acorn/block/mfmhd.c	Wed Jan 12 16:55:04 2005
@@ -124,7 +124,7 @@
 
 static void (*do_mfm)(void) = NULL;
 static struct request_queue *mfm_queue;
-static spinlock_t mfm_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(mfm_lock);
 
 #define MAJOR_NR	MFM_ACORN_MAJOR
 #define QUEUE (mfm_queue)
diff -puN drivers/acpi/bus.c~lock-initializer-cleanup-misc-drivers drivers/acpi/bus.c
--- 25/drivers/acpi/bus.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/acpi/bus.c	Wed Jan 12 16:55:04 2005
@@ -281,7 +281,7 @@ EXPORT_SYMBOL(acpi_bus_set_power);
                                 Event Management
    -------------------------------------------------------------------------- */
 
-static spinlock_t		acpi_bus_event_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(acpi_bus_event_lock);
 
 LIST_HEAD(acpi_bus_event_list);
 DECLARE_WAIT_QUEUE_HEAD(acpi_bus_event_queue);
diff -puN drivers/acpi/ec.c~lock-initializer-cleanup-misc-drivers drivers/acpi/ec.c
--- 25/drivers/acpi/ec.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/acpi/ec.c	Wed Jan 12 16:55:04 2005
@@ -832,7 +832,7 @@ acpi_fake_ecdt_callback (
 	status = acpi_evaluate_integer(handle, "_GPE", NULL, &ec_ecdt->gpe_bit);
 	if (ACPI_FAILURE(status))
 		return status;
-	ec_ecdt->lock = SPIN_LOCK_UNLOCKED;
+	spin_lock_init(&ec_ecdt->lock);
 	ec_ecdt->global_lock = TRUE;
 	ec_ecdt->handle = handle;
 
diff -puN drivers/acpi/event.c~lock-initializer-cleanup-misc-drivers drivers/acpi/event.c
--- 25/drivers/acpi/event.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/acpi/event.c	Wed Jan 12 16:55:04 2005
@@ -16,7 +16,7 @@
 ACPI_MODULE_NAME		("event")
 
 /* Global vars for handling event proc entry */
-static spinlock_t		acpi_system_event_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(acpi_system_event_lock);
 int				event_is_open = 0;
 extern struct list_head		acpi_bus_event_list;
 extern wait_queue_head_t	acpi_bus_event_queue;
diff -puN drivers/acpi/pci_irq.c~lock-initializer-cleanup-misc-drivers drivers/acpi/pci_irq.c
--- 25/drivers/acpi/pci_irq.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/acpi/pci_irq.c	Wed Jan 12 16:55:04 2005
@@ -43,7 +43,7 @@
 ACPI_MODULE_NAME		("pci_irq")
 
 struct acpi_prt_list		acpi_prt;
-spinlock_t acpi_prt_lock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(acpi_prt_lock);
 
 /* --------------------------------------------------------------------------
                          PCI IRQ Routing Table (PRT) Support
diff -puN drivers/acpi/scan.c~lock-initializer-cleanup-misc-drivers drivers/acpi/scan.c
--- 25/drivers/acpi/scan.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/acpi/scan.c	Wed Jan 12 16:55:04 2005
@@ -24,7 +24,7 @@ extern struct acpi_device		*acpi_root;
 #define ACPI_BUS_DEVICE_NAME		"System Bus"
 
 static LIST_HEAD(acpi_device_list);
-spinlock_t acpi_device_lock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(acpi_device_lock);
 LIST_HEAD(acpi_wakeup_device_list);
 
 static void acpi_device_release(struct kobject * kobj)
diff -puN drivers/atm/idt77105.c~lock-initializer-cleanup-misc-drivers drivers/atm/idt77105.c
--- 25/drivers/atm/idt77105.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/atm/idt77105.c	Wed Jan 12 16:55:04 2005
@@ -39,7 +39,7 @@ struct idt77105_priv {
         unsigned char old_mcr;          /* storage of MCR reg while signal lost */
 };
 
-static spinlock_t idt77105_priv_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(idt77105_priv_lock);
 
 #define PRIV(dev) ((struct idt77105_priv *) dev->phy_data)
 
diff -puN drivers/atm/suni.c~lock-initializer-cleanup-misc-drivers drivers/atm/suni.c
--- 25/drivers/atm/suni.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/atm/suni.c	Wed Jan 12 16:55:04 2005
@@ -48,7 +48,7 @@ struct suni_priv {
 
 static struct timer_list poll_timer;
 static struct suni_priv *sunis = NULL;
-static spinlock_t sunis_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(sunis_lock);
 
 
 #define ADD_LIMITED(s,v) \
diff -puN drivers/base/class_simple.c~lock-initializer-cleanup-misc-drivers drivers/base/class_simple.c
--- 25/drivers/base/class_simple.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/base/class_simple.c	Wed Jan 12 16:55:04 2005
@@ -27,7 +27,7 @@ struct simple_dev {
 #define to_simple_dev(d) container_of(d, struct simple_dev, class_dev)
 
 static LIST_HEAD(simple_dev_list);
-static spinlock_t simple_dev_list_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(simple_dev_list_lock);
 
 static void release_simple_dev(struct class_device *class_dev)
 {
diff -puN drivers/cdrom/aztcd.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/aztcd.c
--- 25/drivers/cdrom/aztcd.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/aztcd.c	Wed Jan 12 16:55:04 2005
@@ -312,7 +312,7 @@ static unsigned char aztIndatum;
 static unsigned long aztTimeOutCount;
 static int aztCmd = 0;
 
-static spinlock_t aztSpin = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(aztSpin);
 
 /*###########################################################################
    Function Prototypes
diff -puN drivers/cdrom/cdrom.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/cdrom.c
--- 25/drivers/cdrom/cdrom.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/cdrom.c	Wed Jan 12 16:55:04 2005
@@ -303,7 +303,7 @@ module_param(lockdoor, bool, 0);
 module_param(check_media_type, bool, 0);
 module_param(mrw_format_restart, bool, 0);
 
-static spinlock_t cdrom_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(cdrom_lock);
 
 static const char *mrw_format_status[] = {
 	"not mrw",
diff -puN drivers/cdrom/cdu31a.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/cdu31a.c
--- 25/drivers/cdrom/cdu31a.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/cdu31a.c	Wed Jan 12 16:55:04 2005
@@ -236,7 +236,7 @@ static volatile unsigned short sony_cd_r
 static volatile unsigned short sony_cd_fifost_reg;
 
 static struct request_queue *cdu31a_queue;
-static spinlock_t cdu31a_lock = SPIN_LOCK_UNLOCKED; /* queue lock */
+static DEFINE_SPINLOCK(cdu31a_lock); /* queue lock */
 
 static int sony_spun_up = 0;	/* Has the drive been spun up? */
 
diff -puN drivers/cdrom/cm206.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/cm206.c
--- 25/drivers/cdrom/cm206.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/cm206.c	Wed Jan 12 16:55:04 2005
@@ -302,7 +302,7 @@ struct cm206_struct {
 
 static struct cm206_struct *cd;	/* the main memory structure */
 static struct request_queue *cm206_queue;
-static spinlock_t cm206_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(cm206_lock);
 
 /* First, we define some polling functions. These are actually
    only being used in the initialization. */
diff -puN drivers/cdrom/gscd.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/gscd.c
--- 25/drivers/cdrom/gscd.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/gscd.c	Wed Jan 12 16:55:04 2005
@@ -147,7 +147,7 @@ static int AudioEnd_m;
 static int AudioEnd_f;
 
 static struct timer_list gscd_timer = TIMER_INITIALIZER(NULL, 0, 0);
-static spinlock_t gscd_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(gscd_lock);
 static struct request_queue *gscd_queue;
 
 static struct block_device_operations gscd_fops = {
diff -puN drivers/cdrom/mcd.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/mcd.c
--- 25/drivers/cdrom/mcd.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/mcd.c	Wed Jan 12 16:55:04 2005
@@ -187,7 +187,7 @@ static int mcd_open(struct cdrom_device_
 static void mcd_release(struct cdrom_device_info *cdi);
 static int mcd_media_changed(struct cdrom_device_info *cdi, int disc_nr);
 static int mcd_tray_move(struct cdrom_device_info *cdi, int position);
-static spinlock_t mcd_spinlock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(mcd_spinlock);
 static int mcd_audio_ioctl(struct cdrom_device_info *cdi, unsigned int cmd,
 		    void *arg);
 static int mcd_drive_status(struct cdrom_device_info *cdi, int slot_nr);
diff -puN drivers/cdrom/mcdx.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/mcdx.c
--- 25/drivers/cdrom/mcdx.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/mcdx.c	Wed Jan 12 16:55:04 2005
@@ -305,7 +305,7 @@ static int mcdx_setattentuator(struct s_
 
 static int mcdx_drive_map[][2] = MCDX_DRIVEMAP;
 static struct s_drive_stuff *mcdx_stuffp[MCDX_NDRIVES];
-static spinlock_t mcdx_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(mcdx_lock);
 static struct request_queue *mcdx_queue;
 
 /* You can only set the first two pairs, from old MODULE_PARM code.  */
diff -puN drivers/cdrom/optcd.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/optcd.c
--- 25/drivers/cdrom/optcd.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/optcd.c	Wed Jan 12 16:55:04 2005
@@ -265,7 +265,7 @@ static int sleep_timeout;	/* max # of ti
 static DECLARE_WAIT_QUEUE_HEAD(waitq);
 static void sleep_timer(unsigned long data);
 static struct timer_list delay_timer = TIMER_INITIALIZER(sleep_timer, 0, 0);
-static spinlock_t optcd_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(optcd_lock);
 static struct request_queue *opt_queue;
 
 /* Timer routine: wake up when desired flag goes low,
diff -puN drivers/cdrom/sbpcd.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/sbpcd.c
--- 25/drivers/cdrom/sbpcd.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/sbpcd.c	Wed Jan 12 16:55:04 2005
@@ -461,7 +461,7 @@ static int sbpcd[] =
 /*
  * Protects access to global structures etc.
  */
-static spinlock_t sbpcd_lock __cacheline_aligned = SPIN_LOCK_UNLOCKED;
+static  __cacheline_aligned DEFINE_SPINLOCK(sbpcd_lock);
 static struct request_queue *sbpcd_queue;
 
 MODULE_PARM(sbpcd, "2i");
diff -puN drivers/cdrom/sjcd.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/sjcd.c
--- 25/drivers/cdrom/sjcd.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/sjcd.c	Wed Jan 12 16:55:04 2005
@@ -107,7 +107,7 @@ static volatile unsigned char sjcd_compl
 static volatile unsigned char sjcd_completion_error = 0;
 static unsigned short sjcd_command_is_in_progress = 0;
 static unsigned short sjcd_error_reported = 0;
-static spinlock_t sjcd_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(sjcd_lock);
 
 static int sjcd_open_count;
 
diff -puN drivers/cdrom/sonycd535.c~lock-initializer-cleanup-misc-drivers drivers/cdrom/sonycd535.c
--- 25/drivers/cdrom/sonycd535.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cdrom/sonycd535.c	Wed Jan 12 16:55:04 2005
@@ -222,7 +222,7 @@ static unsigned short command_reg;
 static unsigned short read_status_reg;
 static unsigned short data_reg;
 
-static spinlock_t sonycd535_lock = SPIN_LOCK_UNLOCKED; /* queue lock */
+static DEFINE_SPINLOCK(sonycd535_lock); /* queue lock */
 static struct request_queue *sonycd535_queue;
 
 static int initialized;			/* Has the drive been initialized? */
diff -puN drivers/cpufreq/cpufreq.c~lock-initializer-cleanup-misc-drivers drivers/cpufreq/cpufreq.c
--- 25/drivers/cpufreq/cpufreq.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/cpufreq/cpufreq.c	Wed Jan 12 16:55:04 2005
@@ -33,7 +33,7 @@
  */
 static struct cpufreq_driver   	*cpufreq_driver;
 static struct cpufreq_policy	*cpufreq_cpu_data[NR_CPUS];
-static spinlock_t		cpufreq_driver_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(cpufreq_driver_lock);
 
 
 /* we keep a copy of all ->add'ed CPU's struct sys_device here;
@@ -130,7 +130,7 @@ static unsigned int debug_ratelimit = 1;
  * is set, and disabled upon cpufreq driver removal
  */
 static unsigned int disable_ratelimit = 1;
-static spinlock_t disable_ratelimit_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(disable_ratelimit_lock);
 
 static inline void cpufreq_debug_enable_ratelimit(void)
 {
diff -puN drivers/firmware/efivars.c~lock-initializer-cleanup-misc-drivers drivers/firmware/efivars.c
--- 25/drivers/firmware/efivars.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/firmware/efivars.c	Wed Jan 12 16:55:04 2005
@@ -97,7 +97,7 @@ MODULE_VERSION(EFIVARS_VERSION);
  * efi.get_next_variable() is only called from efivars_init(),
  * which is protected by the BKL, so that path is safe.
  */
-static spinlock_t efivars_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(efivars_lock);
 static LIST_HEAD(efivar_list);
 
 /*
diff -puN drivers/i2c/i2c-dev.c~lock-initializer-cleanup-misc-drivers drivers/i2c/i2c-dev.c
--- 25/drivers/i2c/i2c-dev.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/i2c/i2c-dev.c	Wed Jan 12 16:55:04 2005
@@ -53,7 +53,7 @@ struct i2c_dev {
 
 #define I2C_MINORS	256
 static struct i2c_dev *i2c_dev_array[I2C_MINORS];
-static spinlock_t i2c_dev_array_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(i2c_dev_array_lock);
 
 struct i2c_dev *i2c_dev_get_by_minor(unsigned index)
 {
diff -puN drivers/input/misc/pcspkr.c~lock-initializer-cleanup-misc-drivers drivers/input/misc/pcspkr.c
--- 25/drivers/input/misc/pcspkr.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/input/misc/pcspkr.c	Wed Jan 12 16:55:04 2005
@@ -27,7 +27,7 @@ static char pcspkr_name[] = "PC Speaker"
 static char pcspkr_phys[] = "isa0061/input0";
 static struct input_dev pcspkr_dev;
 
-spinlock_t i8253_beep_lock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(i8253_beep_lock);
 
 static int pcspkr_event(struct input_dev *dev, unsigned int type, unsigned int code, int value)
 {
diff -puN drivers/input/misc/sparcspkr.c~lock-initializer-cleanup-misc-drivers drivers/input/misc/sparcspkr.c
--- 25/drivers/input/misc/sparcspkr.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/input/misc/sparcspkr.c	Wed Jan 12 16:55:04 2005
@@ -27,7 +27,7 @@ static char *sparcspkr_ebus_name = "Spar
 static char *sparcspkr_phys = "sparc/input0";
 static struct input_dev sparcspkr_dev;
 
-spinlock_t beep_lock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(beep_lock);
 
 static void __init init_sparcspkr_struct(void)
 {
diff -puN drivers/input/serio/i8042.c~lock-initializer-cleanup-misc-drivers drivers/input/serio/i8042.c
--- 25/drivers/input/serio/i8042.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/input/serio/i8042.c	Wed Jan 12 16:55:04 2005
@@ -82,7 +82,7 @@ __obsolete_setup("i8042_dumbkbd");
 
 #include "i8042.h"
 
-spinlock_t i8042_lock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(i8042_lock);
 
 struct i8042_port {
 	struct serio *serio;
diff -puN drivers/input/serio/q40kbd.c~lock-initializer-cleanup-misc-drivers drivers/input/serio/q40kbd.c
--- 25/drivers/input/serio/q40kbd.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/input/serio/q40kbd.c	Wed Jan 12 16:55:04 2005
@@ -48,7 +48,7 @@ MODULE_AUTHOR("Vojtech Pavlik <vojtech@u
 MODULE_DESCRIPTION("Q40 PS/2 keyboard controller driver");
 MODULE_LICENSE("GPL");
 
-spinlock_t q40kbd_lock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(q40kbd_lock);
 static struct serio *q40kbd_port;
 static struct platform_device *q40kbd_device;
 
diff -puN drivers/input/serio/serio.c~lock-initializer-cleanup-misc-drivers drivers/input/serio/serio.c
--- 25/drivers/input/serio/serio.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/input/serio/serio.c	Wed Jan 12 16:55:04 2005
@@ -113,7 +113,7 @@ enum serio_event_type {
 	SERIO_UNREGISTER_PORT,
 };
 
-static spinlock_t serio_event_lock = SPIN_LOCK_UNLOCKED;	/* protects serio_event_list */
+static DEFINE_SPINLOCK(serio_event_lock);	/* protects serio_event_list */
 static LIST_HEAD(serio_event_list);
 static DECLARE_WAIT_QUEUE_HEAD(serio_wait);
 static DECLARE_COMPLETION(serio_exited);
diff -puN drivers/macintosh/adb.c~lock-initializer-cleanup-misc-drivers drivers/macintosh/adb.c
--- 25/drivers/macintosh/adb.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/macintosh/adb.c	Wed Jan 12 16:55:04 2005
@@ -120,7 +120,7 @@ static struct adb_handler {
  * called.
  */
 static DECLARE_MUTEX(adb_handler_sem);
-static rwlock_t adb_handler_lock = RW_LOCK_UNLOCKED;
+static DEFINE_RWLOCK(adb_handler_lock);
 
 #if 0
 static void printADBreply(struct adb_request *req)
diff -puN drivers/macintosh/adbhid.c~lock-initializer-cleanup-misc-drivers drivers/macintosh/adbhid.c
--- 25/drivers/macintosh/adbhid.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/macintosh/adbhid.c	Wed Jan 12 16:55:04 2005
@@ -569,7 +569,7 @@ static int leds_req_pending;
 static int pending_devs[16];
 static int pending_led_start=0;
 static int pending_led_end=0;
-static spinlock_t leds_lock  = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(leds_lock);
 
 static void leds_done(struct adb_request *req)
 {
diff -puN drivers/macintosh/macio-adb.c~lock-initializer-cleanup-misc-drivers drivers/macintosh/macio-adb.c
--- 25/drivers/macintosh/macio-adb.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/macintosh/macio-adb.c	Wed Jan 12 16:55:04 2005
@@ -59,7 +59,7 @@ struct adb_regs {
 
 static volatile struct adb_regs __iomem *adb;
 static struct adb_request *current_req, *last_req;
-static spinlock_t macio_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(macio_lock);
 
 static int macio_probe(void);
 static int macio_init(void);
diff -puN drivers/macintosh/via-cuda.c~lock-initializer-cleanup-misc-drivers drivers/macintosh/via-cuda.c
--- 25/drivers/macintosh/via-cuda.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/macintosh/via-cuda.c	Wed Jan 12 16:55:04 2005
@@ -33,7 +33,7 @@
 #include <linux/init.h>
 
 static volatile unsigned char __iomem *via;
-static spinlock_t cuda_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(cuda_lock);
 
 #ifdef CONFIG_MAC
 #define CUDA_IRQ IRQ_MAC_ADB
diff -puN drivers/macintosh/via-pmu.c~lock-initializer-cleanup-misc-drivers drivers/macintosh/via-pmu.c
--- 25/drivers/macintosh/via-pmu.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/macintosh/via-pmu.c	Wed Jan 12 16:55:04 2005
@@ -2721,7 +2721,7 @@ struct pmu_private {
 };
 
 static LIST_HEAD(all_pmu_pvt);
-static spinlock_t all_pvt_lock __pmacdata = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(all_pvt_lock __pmacdata);
 
 static void __pmac
 pmu_pass_intr(unsigned char *data, int len)
diff -puN drivers/message/fusion/mptlan.c~lock-initializer-cleanup-misc-drivers drivers/message/fusion/mptlan.c
--- 25/drivers/message/fusion/mptlan.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/message/fusion/mptlan.c	Wed Jan 12 16:55:04 2005
@@ -179,7 +179,7 @@ static u32 tx_max_out_p = 127 - 16;
 
 #ifdef QLOGIC_NAA_WORKAROUND
 static struct NAA_Hosed *mpt_bad_naa = NULL;
-rwlock_t bad_naa_lock = RW_LOCK_UNLOCKED;
+DEFINE_RWLOCK(bad_naa_lock);
 #endif
 
 /*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/
diff -puN drivers/message/fusion/mptscsih.c~lock-initializer-cleanup-misc-drivers drivers/message/fusion/mptscsih.c
--- 25/drivers/message/fusion/mptscsih.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/message/fusion/mptscsih.c	Wed Jan 12 16:55:04 2005
@@ -241,7 +241,7 @@ static int	ScsiScanDvCtx = -1; /* Used o
 /*
  * Domain Validation task structure
  */
-static spinlock_t dvtaskQ_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(dvtaskQ_lock);
 static int dvtaskQ_active = 0;
 static int dvtaskQ_release = 0;
 static struct work_struct	mptscsih_dvTask;
diff -puN drivers/oprofile/buffer_sync.c~lock-initializer-cleanup-misc-drivers drivers/oprofile/buffer_sync.c
--- 25/drivers/oprofile/buffer_sync.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/oprofile/buffer_sync.c	Wed Jan 12 16:55:04 2005
@@ -35,7 +35,7 @@
 static LIST_HEAD(dying_tasks);
 static LIST_HEAD(dead_tasks);
 cpumask_t marked_cpus = CPU_MASK_NONE;
-static spinlock_t task_mortuary = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(task_mortuary);
 void process_task_mortuary(void);
 
 
diff -puN drivers/oprofile/oprofilefs.c~lock-initializer-cleanup-misc-drivers drivers/oprofile/oprofilefs.c
--- 25/drivers/oprofile/oprofilefs.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/oprofile/oprofilefs.c	Wed Jan 12 16:55:04 2005
@@ -21,7 +21,7 @@
 
 #define OPROFILEFS_MAGIC 0x6f70726f
 
-spinlock_t oprofilefs_lock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(oprofilefs_lock);
 
 static struct inode * oprofilefs_get_inode(struct super_block * sb, int mode)
 {
diff -puN drivers/parport/daisy.c~lock-initializer-cleanup-misc-drivers drivers/parport/daisy.c
--- 25/drivers/parport/daisy.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/parport/daisy.c	Wed Jan 12 16:55:04 2005
@@ -41,7 +41,7 @@ static struct daisydev {
 	int daisy;
 	int devnum;
 } *topology = NULL;
-static spinlock_t topology_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(topology_lock);
 
 static int numdevs = 0;
 
diff -puN drivers/parport/parport_pc.c~lock-initializer-cleanup-misc-drivers drivers/parport/parport_pc.c
--- 25/drivers/parport/parport_pc.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/parport/parport_pc.c	Wed Jan 12 16:55:04 2005
@@ -2130,7 +2130,7 @@ static int __devinit parport_dma_probe (
 /* --- Initialisation code -------------------------------- */
 
 static LIST_HEAD(ports_list);
-static spinlock_t ports_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(ports_lock);
 
 struct parport *parport_pc_probe_port (unsigned long int base,
 				       unsigned long int base_hi,
diff -puN drivers/parport/share.c~lock-initializer-cleanup-misc-drivers drivers/parport/share.c
--- 25/drivers/parport/share.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/parport/share.c	Wed Jan 12 16:55:04 2005
@@ -42,11 +42,11 @@ unsigned long parport_default_timeslice 
 int parport_default_spintime =  DEFAULT_SPIN_TIME;
 
 static LIST_HEAD(portlist);
-static spinlock_t parportlist_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(parportlist_lock);
 
 /* list of all allocated ports, sorted by ->number */
 static LIST_HEAD(all_ports);
-static spinlock_t full_list_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(full_list_lock);
 
 static LIST_HEAD(drivers);
 
diff -puN drivers/pcmcia/au1000_generic.c~lock-initializer-cleanup-misc-drivers drivers/pcmcia/au1000_generic.c
--- 25/drivers/pcmcia/au1000_generic.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/pcmcia/au1000_generic.c	Wed Jan 12 16:55:04 2005
@@ -141,7 +141,7 @@ static struct pccard_operations au1000_p
 #endif
 };
 
-static spinlock_t pcmcia_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(pcmcia_lock);
 
 static int __init au1000_pcmcia_driver_init(void)
 {
diff -puN drivers/pcmcia/i82092.c~lock-initializer-cleanup-misc-drivers drivers/pcmcia/i82092.c
--- 25/drivers/pcmcia/i82092.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/pcmcia/i82092.c	Wed Jan 12 16:55:04 2005
@@ -200,7 +200,7 @@ static void __devexit i82092aa_pci_remov
 	leave("i82092aa_pci_remove");
 }
 
-static spinlock_t port_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(port_lock);
 
 /* basic value read/write functions */
 
diff -puN drivers/pcmcia/i82365.c~lock-initializer-cleanup-misc-drivers drivers/pcmcia/i82365.c
--- 25/drivers/pcmcia/i82365.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/pcmcia/i82365.c	Wed Jan 12 16:55:04 2005
@@ -186,7 +186,7 @@ static struct i82365_socket socket[8] = 
 #define I365_MASK	0xdeb8	/* irq 15,14,12,11,10,9,7,5,4,3 */
 
 static int grab_irq;
-static spinlock_t isa_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(isa_lock);
 #define ISA_LOCK(n, f) spin_lock_irqsave(&isa_lock, f)
 #define ISA_UNLOCK(n, f) spin_unlock_irqrestore(&isa_lock, f)
 
@@ -233,7 +233,7 @@ static pcic_t pcic[] = {
 
 /*====================================================================*/
 
-static spinlock_t bus_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(bus_lock);
 
 static u_char i365_get(u_short sock, u_short reg)
 {
diff -puN drivers/pcmcia/m32r_cfc.c~lock-initializer-cleanup-misc-drivers drivers/pcmcia/m32r_cfc.c
--- 25/drivers/pcmcia/m32r_cfc.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/pcmcia/m32r_cfc.c	Wed Jan 12 16:55:04 2005
@@ -86,7 +86,7 @@ static pcc_socket_t socket[M32R_MAX_PCC]
 static unsigned int pcc_get(u_short, unsigned int);
 static void pcc_set(u_short, unsigned int , unsigned int );
 
-static spinlock_t pcc_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(pcc_lock);
 
 #if !defined(CONFIG_PLAT_USRV)
 static inline u_long pcc_port2addr(unsigned long port, int size) {
diff -puN drivers/pcmcia/m32r_pcc.c~lock-initializer-cleanup-misc-drivers drivers/pcmcia/m32r_pcc.c
--- 25/drivers/pcmcia/m32r_pcc.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/pcmcia/m32r_pcc.c	Wed Jan 12 16:55:04 2005
@@ -96,7 +96,7 @@ static pcc_socket_t socket[M32R_MAX_PCC]
 static unsigned int pcc_get(u_short, unsigned int);
 static void pcc_set(u_short, unsigned int , unsigned int );
 
-static spinlock_t pcc_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(pcc_lock);
 
 void pcc_iorw(int sock, unsigned long port, void *buf, size_t size, size_t nmemb, int wr, int flag)
 {
diff -puN drivers/pcmcia/pd6729.c~lock-initializer-cleanup-misc-drivers drivers/pcmcia/pd6729.c
--- 25/drivers/pcmcia/pd6729.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/pcmcia/pd6729.c	Wed Jan 12 16:55:04 2005
@@ -67,7 +67,7 @@ MODULE_PARM_DESC(irq_mode,
 		"interrupt delivery mode. 0 = ISA, 1 = PCI. default is 1");
 MODULE_PARM_DESC(irq_list, "interrupts that can be used by PCMCIA cards");
 
-static spinlock_t port_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(port_lock);
 
 /* basic value read/write functions */
 
diff -puN drivers/pcmcia/soc_common.c~lock-initializer-cleanup-misc-drivers drivers/pcmcia/soc_common.c
--- 25/drivers/pcmcia/soc_common.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/pcmcia/soc_common.c	Wed Jan 12 16:55:04 2005
@@ -208,7 +208,7 @@ static int soc_common_pcmcia_suspend(str
 	return ret;
 }
 
-static spinlock_t status_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(status_lock);
 
 static void soc_common_check_status(struct soc_pcmcia_socket *skt)
 {
diff -puN drivers/pnp/core.c~lock-initializer-cleanup-misc-drivers drivers/pnp/core.c
--- 25/drivers/pnp/core.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/pnp/core.c	Wed Jan 12 16:55:04 2005
@@ -20,7 +20,7 @@
 
 LIST_HEAD(pnp_protocols);
 LIST_HEAD(pnp_global);
-spinlock_t pnp_lock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(pnp_lock);
 
 void *pnp_alloc(long size)
 {
diff -puN drivers/s390/block/dasd_devmap.c~lock-initializer-cleanup-misc-drivers drivers/s390/block/dasd_devmap.c
--- 25/drivers/s390/block/dasd_devmap.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/s390/block/dasd_devmap.c	Wed Jan 12 16:55:04 2005
@@ -74,7 +74,7 @@ static char *dasd[256];
 /*
  * Single spinlock to protect devmap structures and lists.
  */
-static spinlock_t dasd_devmap_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(dasd_devmap_lock);
 
 /*
  * Hash lists for devmap structures.
diff -puN drivers/s390/char/con3215.c~lock-initializer-cleanup-misc-drivers drivers/s390/char/con3215.c
--- 25/drivers/s390/char/con3215.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/s390/char/con3215.c	Wed Jan 12 16:55:04 2005
@@ -102,7 +102,7 @@ struct raw3215_info {
 /* array of 3215 devices structures */
 static struct raw3215_info *raw3215[NR_3215];
 /* spinlock to protect the raw3215 array */
-static spinlock_t raw3215_device_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(raw3215_device_lock);
 /* list of free request structures */
 static struct raw3215_req *raw3215_freelist;
 /* spinlock to protect free list */
diff -puN drivers/s390/char/sclp.c~lock-initializer-cleanup-misc-drivers drivers/s390/char/sclp.c
--- 25/drivers/s390/char/sclp.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/s390/char/sclp.c	Wed Jan 12 16:55:04 2005
@@ -26,7 +26,7 @@
 static ext_int_info_t ext_int_info_hwc;
 
 /* Lock to protect internal data consistency. */
-static spinlock_t sclp_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(sclp_lock);
 
 /* Mask of events that we can receive from the sclp interface. */
 static sccb_mask_t sclp_receive_mask;
diff -puN drivers/s390/char/tape_core.c~lock-initializer-cleanup-misc-drivers drivers/s390/char/tape_core.c
--- 25/drivers/s390/char/tape_core.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/s390/char/tape_core.c	Wed Jan 12 16:55:04 2005
@@ -36,7 +36,7 @@ static void __tape_remove_request(struct
  * The list is protected by the rwlock
  */
 static struct list_head tape_device_list = LIST_HEAD_INIT(tape_device_list);
-static rwlock_t tape_device_lock = RW_LOCK_UNLOCKED;
+static DEFINE_RWLOCK(tape_device_lock);
 
 /*
  * Pointer to debug area.
diff -puN drivers/s390/cio/css.c~lock-initializer-cleanup-misc-drivers drivers/s390/cio/css.c
--- 25/drivers/s390/cio/css.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/s390/cio/css.c	Wed Jan 12 16:55:04 2005
@@ -304,7 +304,7 @@ struct slow_subchannel {
 };
 
 static LIST_HEAD(slow_subchannels_head);
-static spinlock_t slow_subchannel_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(slow_subchannel_lock);
 
 static void
 css_trigger_slow_path(void)
diff -puN drivers/s390/cio/device_id.c~lock-initializer-cleanup-misc-drivers drivers/s390/cio/device_id.c
--- 25/drivers/s390/cio/device_id.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/s390/cio/device_id.c	Wed Jan 12 16:55:04 2005
@@ -36,7 +36,7 @@ diag210(struct diag210 * addr)
 	 * use a static data area to be sure
 	 */
 	static struct diag210 diag210_tmp;
-	static spinlock_t diag210_lock = SPIN_LOCK_UNLOCKED;
+	static DEFINE_SPINLOCK(diag210_lock);
 	unsigned long flags;
 	int ccode;
 
diff -puN drivers/s390/cio/qdio.c~lock-initializer-cleanup-misc-drivers drivers/s390/cio/qdio.c
--- 25/drivers/s390/cio/qdio.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/s390/cio/qdio.c	Wed Jan 12 16:55:04 2005
@@ -95,7 +95,7 @@ static debug_info_t *qdio_dbf_slsb_in;
 /* iQDIO stuff: */
 static volatile struct qdio_q *tiq_list=NULL; /* volatile as it could change
 						 during a while loop */
-static spinlock_t ttiq_list_lock=SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(ttiq_list_lock);
 static int register_thinint_result;
 static void tiqdio_tl(unsigned long);
 static DECLARE_TASKLET(tiqdio_tasklet,tiqdio_tl,0);
diff -puN drivers/s390/net/iucv.c~lock-initializer-cleanup-misc-drivers drivers/s390/net/iucv.c
--- 25/drivers/s390/net/iucv.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/s390/net/iucv.c	Wed Jan 12 16:55:04 2005
@@ -103,7 +103,7 @@ static iucv_GeneralInterrupt *iucv_exter
 
 /* Spin Lock declaration */
 
-static spinlock_t iucv_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(iucv_lock);
 
 static int messagesDisabled = 0;
 
@@ -115,7 +115,7 @@ typedef struct {
 } iucv_irqdata;
 
 static struct list_head  iucv_irq_queue;
-static spinlock_t iucv_irq_queue_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(iucv_irq_queue_lock);
 
 /*
  *Internal function prototypes
diff -puN drivers/s390/net/smsgiucv.c~lock-initializer-cleanup-misc-drivers drivers/s390/net/smsgiucv.c
--- 25/drivers/s390/net/smsgiucv.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/s390/net/smsgiucv.c	Wed Jan 12 16:55:04 2005
@@ -41,7 +41,7 @@ MODULE_DESCRIPTION ("Linux for S/390 IUC
 
 static iucv_handle_t smsg_handle;
 static unsigned short smsg_pathid;
-static spinlock_t smsg_list_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(smsg_list_lock);
 static struct list_head smsg_list = LIST_HEAD_INIT(smsg_list);
 
 static void
diff -puN drivers/sbus/char/bpp.c~lock-initializer-cleanup-misc-drivers drivers/sbus/char/bpp.c
--- 25/drivers/sbus/char/bpp.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/sbus/char/bpp.c	Wed Jan 12 16:55:04 2005
@@ -432,7 +432,7 @@ static int terminate(unsigned minor)
       return 0;
 }
 
-static spinlock_t bpp_open_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(bpp_open_lock);
 
 /*
  * Allow only one process to open the device at a time.
diff -puN drivers/sbus/char/flash.c~lock-initializer-cleanup-misc-drivers drivers/sbus/char/flash.c
--- 25/drivers/sbus/char/flash.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/sbus/char/flash.c	Wed Jan 12 16:55:04 2005
@@ -24,7 +24,7 @@
 #include <asm/ebus.h>
 #include <asm/upa.h>
 
-static spinlock_t flash_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(flash_lock);
 static struct {
 	unsigned long read_base;	/* Physical read address */
 	unsigned long write_base;	/* Physical write address */
diff -puN drivers/sbus/char/jsflash.c~lock-initializer-cleanup-misc-drivers drivers/sbus/char/jsflash.c
--- 25/drivers/sbus/char/jsflash.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/sbus/char/jsflash.c	Wed Jan 12 16:55:04 2005
@@ -539,7 +539,7 @@ static struct request_queue *jsf_queue;
 
 static int jsfd_init(void)
 {
-	static spinlock_t lock = SPIN_LOCK_UNLOCKED;
+	static DEFINE_SPINLOCK(lock);
 	struct jsflash *jsf;
 	struct jsfd_part *jdp;
 	int err;
diff -puN drivers/sbus/char/riowatchdog.c~lock-initializer-cleanup-misc-drivers drivers/sbus/char/riowatchdog.c
--- 25/drivers/sbus/char/riowatchdog.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/sbus/char/riowatchdog.c	Wed Jan 12 16:55:04 2005
@@ -52,7 +52,7 @@ MODULE_LICENSE("GPL");
 #define RIOWD_NAME	"pmc"
 #define RIOWD_MINOR	215
 
-static spinlock_t riowd_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(riowd_lock);
 
 static void __iomem *bbc_regs;
 static void __iomem *riowd_regs;
diff -puN drivers/sbus/char/vfc_dev.c~lock-initializer-cleanup-misc-drivers drivers/sbus/char/vfc_dev.c
--- 25/drivers/sbus/char/vfc_dev.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/sbus/char/vfc_dev.c	Wed Jan 12 16:55:04 2005
@@ -178,7 +178,7 @@ struct vfc_dev *vfc_get_dev_ptr(int inst
 	return vfc_dev_lst[instance];
 }
 
-static spinlock_t vfc_dev_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(vfc_dev_lock);
 
 static int vfc_open(struct inode *inode, struct file *file) 
 {
diff -puN drivers/w1/w1.c~lock-initializer-cleanup-misc-drivers drivers/w1/w1.c
--- 25/drivers/w1/w1.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/w1/w1.c	Wed Jan 12 16:55:04 2005
@@ -52,7 +52,7 @@ module_param_named(timeout, w1_timeout, 
 module_param_named(max_slave_count, w1_max_slave_count, int, 0);
 module_param_named(slave_ttl, w1_max_slave_ttl, int, 0);
 
-spinlock_t w1_mlock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(w1_mlock);
 LIST_HEAD(w1_masters);
 
 static pid_t control_thread;
diff -puN drivers/w1/w1_family.c~lock-initializer-cleanup-misc-drivers drivers/w1/w1_family.c
--- 25/drivers/w1/w1_family.c~lock-initializer-cleanup-misc-drivers	Wed Jan 12 16:55:04 2005
+++ 25-akpm/drivers/w1/w1_family.c	Wed Jan 12 16:55:04 2005
@@ -25,7 +25,7 @@
 
 #include "w1_family.h"
 
-spinlock_t w1_flock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(w1_flock);
 static LIST_HEAD(w1_families);
 
 static int w1_check_family(struct w1_family *f)
_
