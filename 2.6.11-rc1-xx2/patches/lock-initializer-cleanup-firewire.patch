
From: Thomas Gleixner <tglx@linutronix.de>

Use the new lock initializers DEFINE_SPIN_LOCK and DEFINE_RW_LOCK

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/drivers/ieee1394/dv1394.c    |    2 +-
 25-akpm/drivers/ieee1394/highlevel.c |    4 ++--
 25-akpm/drivers/ieee1394/raw1394.c   |    2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

diff -puN drivers/ieee1394/dv1394.c~lock-initializer-cleanup-firewire drivers/ieee1394/dv1394.c
--- 25/drivers/ieee1394/dv1394.c~lock-initializer-cleanup-firewire	Wed Jan 12 16:54:48 2005
+++ 25-akpm/drivers/ieee1394/dv1394.c	Wed Jan 12 16:54:48 2005
@@ -172,7 +172,7 @@ static void ir_tasklet_func(unsigned lon
 
 /* list of all video_cards */
 static LIST_HEAD(dv1394_cards);
-static spinlock_t dv1394_cards_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(dv1394_cards_lock);
 
 /* translate from a struct file* to the corresponding struct video_card* */
 
diff -puN drivers/ieee1394/highlevel.c~lock-initializer-cleanup-firewire drivers/ieee1394/highlevel.c
--- 25/drivers/ieee1394/highlevel.c~lock-initializer-cleanup-firewire	Wed Jan 12 16:54:48 2005
+++ 25-akpm/drivers/ieee1394/highlevel.c	Wed Jan 12 16:54:48 2005
@@ -43,9 +43,9 @@ static LIST_HEAD(hl_drivers);
 static DECLARE_RWSEM(hl_drivers_sem);
 
 static LIST_HEAD(hl_irqs);
-static rwlock_t hl_irqs_lock = RW_LOCK_UNLOCKED;
+static DEFINE_RWLOCK(hl_irqs_lock);
 
-static rwlock_t addr_space_lock = RW_LOCK_UNLOCKED;
+static DEFINE_RWLOCK(addr_space_lock);
 
 /* addr_space list will have zero and max already included as bounds */
 static struct hpsb_address_ops dummy_ops = { NULL, NULL, NULL, NULL };
diff -puN drivers/ieee1394/raw1394.c~lock-initializer-cleanup-firewire drivers/ieee1394/raw1394.c
--- 25/drivers/ieee1394/raw1394.c~lock-initializer-cleanup-firewire	Wed Jan 12 16:54:48 2005
+++ 25-akpm/drivers/ieee1394/raw1394.c	Wed Jan 12 16:54:48 2005
@@ -71,7 +71,7 @@ printk(KERN_INFO "raw1394:" fmt "\n" , #
 
 static LIST_HEAD(host_info_list);
 static int host_count;
-static spinlock_t host_info_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(host_info_lock);
 static atomic_t internal_generation = ATOMIC_INIT(0);
 
 static atomic_t iso_buffer_size;
_
