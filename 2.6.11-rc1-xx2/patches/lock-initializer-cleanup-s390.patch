
From: Thomas Gleixner <tglx@linutronix.de>

Use the new lock initializers DEFINE_SPIN_LOCK and DEFINE_RW_LOCK

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/arch/s390/appldata/appldata_base.c |    4 ++--
 25-akpm/arch/s390/kernel/cpcmd.c           |    2 +-
 25-akpm/arch/s390/kernel/smp.c             |    4 ++--
 25-akpm/arch/s390/kernel/traps.c           |    2 +-
 25-akpm/arch/s390/mm/extmem.c              |    2 +-
 5 files changed, 7 insertions(+), 7 deletions(-)

diff -puN arch/s390/appldata/appldata_base.c~lock-initializer-cleanup-s390 arch/s390/appldata/appldata_base.c
--- 25/arch/s390/appldata/appldata_base.c~lock-initializer-cleanup-s390	Wed Jan 12 16:54:38 2005
+++ 25-akpm/arch/s390/appldata/appldata_base.c	Wed Jan 12 16:54:38 2005
@@ -128,7 +128,7 @@ static struct ctl_table appldata_dir_tab
 DEFINE_PER_CPU(struct vtimer_list, appldata_timer);
 static atomic_t appldata_expire_count = ATOMIC_INIT(0);
 
-static spinlock_t appldata_timer_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(appldata_timer_lock);
 static int appldata_interval = APPLDATA_CPU_INTERVAL;
 static int appldata_timer_active;
 
@@ -140,7 +140,7 @@ static struct tasklet_struct appldata_ta
 /*
  * Ops list
  */
-static spinlock_t appldata_ops_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(appldata_ops_lock);
 static LIST_HEAD(appldata_ops_list);
 
 
diff -puN arch/s390/kernel/cpcmd.c~lock-initializer-cleanup-s390 arch/s390/kernel/cpcmd.c
--- 25/arch/s390/kernel/cpcmd.c~lock-initializer-cleanup-s390	Wed Jan 12 16:54:38 2005
+++ 25-akpm/arch/s390/kernel/cpcmd.c	Wed Jan 12 16:54:38 2005
@@ -14,7 +14,7 @@
 #include <asm/cpcmd.h>
 #include <asm/system.h>
 
-static spinlock_t cpcmd_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(cpcmd_lock);
 static char cpcmd_buf[240];
 
 void cpcmd(char *cmd, char *response, int rlen)
diff -puN arch/s390/kernel/smp.c~lock-initializer-cleanup-s390 arch/s390/kernel/smp.c
--- 25/arch/s390/kernel/smp.c~lock-initializer-cleanup-s390	Wed Jan 12 16:54:38 2005
+++ 25-akpm/arch/s390/kernel/smp.c	Wed Jan 12 16:54:38 2005
@@ -76,7 +76,7 @@ static void smp_ext_bitcall_others(ec_bi
  * Structure and data for smp_call_function(). This is designed to minimise
  * static memory requirements. It also looks cleaner.
  */
-static spinlock_t call_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(call_lock);
 
 struct call_data_struct {
 	void (*func) (void *info);
@@ -578,7 +578,7 @@ static void __init smp_create_idle(unsig
 
 /* Reserving and releasing of CPUs */
 
-static spinlock_t smp_reserve_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(smp_reserve_lock);
 static int smp_cpu_reserved[NR_CPUS];
 
 int
diff -puN arch/s390/kernel/traps.c~lock-initializer-cleanup-s390 arch/s390/kernel/traps.c
--- 25/arch/s390/kernel/traps.c~lock-initializer-cleanup-s390	Wed Jan 12 16:54:38 2005
+++ 25-akpm/arch/s390/kernel/traps.c	Wed Jan 12 16:54:38 2005
@@ -273,7 +273,7 @@ char *task_show_regs(struct task_struct 
 	return buffer;
 }
 
-spinlock_t die_lock = SPIN_LOCK_UNLOCKED;
+DEFINE_SPINLOCK(die_lock);
 
 void die(const char * str, struct pt_regs * regs, long err)
 {
diff -puN arch/s390/mm/extmem.c~lock-initializer-cleanup-s390 arch/s390/mm/extmem.c
--- 25/arch/s390/mm/extmem.c~lock-initializer-cleanup-s390	Wed Jan 12 16:54:38 2005
+++ 25-akpm/arch/s390/mm/extmem.c	Wed Jan 12 16:54:38 2005
@@ -77,7 +77,7 @@ struct dcss_segment {
 	int segcnt;
 };
 
-static spinlock_t dcss_lock = SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(dcss_lock);
 static struct list_head dcss_list = LIST_HEAD_INIT(dcss_list);
 static char *segtype_string[] = { "SW", "EW", "SR", "ER", "SN", "EN", "SC",
 					"EW/EN-MIXED" };
_
