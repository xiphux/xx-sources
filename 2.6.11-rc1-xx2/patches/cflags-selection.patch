Index: xx-sources/arch/i386/Makefile
===================================================================
--- xx-sources.orig/arch/i386/Makefile	2004-10-11 16:25:46.084342744 -0400
+++ xx-sources/arch/i386/Makefile	2004-10-11 16:35:34.991815200 -0400
@@ -62,6 +62,14 @@
 
 CFLAGS += $(cflags-y)
 
+ifdef CONFIG_CFLAGS_EDIT
+	ifdef CONFIG_CFLAGS_OVERRIDE
+		CFLAGS = $(shell echo $(CONFIG_CFLAGS_STRING) | sed -e 's/"//g')
+	else
+		CFLAGS += $(shell echo $(CONFIG_CFLAGS_STRING) | sed -e 's/"//g')
+	endif
+endif
+
 # Default subarch .c files
 mcore-y  := mach-default
 
Index: xx-sources/arch/i386/kernel/traps.c
===================================================================
--- xx-sources.orig/arch/i386/kernel/traps.c	2004-10-11 16:26:13.401189952 -0400
+++ xx-sources/arch/i386/kernel/traps.c	2004-10-11 16:36:20.814849040 -0400
@@ -211,6 +211,9 @@
 	}
 
 	stack = esp;
+#ifdef CONFIG_CFLAGS_EDIT
+	printk("CFLAGS_EDIT\n");
+#endif
 	for(i = 0; i < kstack_depth_to_print; i++) {
 		if (kstack_end(stack))
 			break;
@@ -361,7 +364,11 @@
 		nl = 1;
 #endif
 #ifdef CONFIG_DEBUG_PAGEALLOC
-		printk("DEBUG_PAGEALLOC");
+	printk("DEBUG_PAGEALLOC ");
+	nl = 1;
+#endif
+#ifdef CONFIG_CFLAGS_EDIT
+	printk("CFLAGS_EDIT");
 		nl = 1;
 #endif
 		if (nl)
Index: xx-sources/arch/x86_64/Makefile
===================================================================
--- xx-sources.orig/arch/x86_64/Makefile	2004-10-11 15:16:58.000000000 -0400
+++ xx-sources/arch/x86_64/Makefile	2004-10-11 16:35:35.003813376 -0400
@@ -60,6 +60,14 @@
 # unfortunately it makes reading oopses harder.
 CFLAGS += $(call cc-option,-funit-at-a-time)
 
+ifdef CONFIG_CFLAGS_EDIT
+	ifdef CONFIG_CFLAGS_OVERRIDE
+		CFLAGS = $(shell echo $(CONFIG_CFLAGS_STRING) | sed -e 's/"//g')
+	else
+		CFLAGS += $(shell echo $(CONFIG_CFLAGS_STRING) | sed -e 's/"//g')
+	endif
+endif
+
 head-y := arch/x86_64/kernel/head.o arch/x86_64/kernel/head64.o arch/x86_64/kernel/init_task.o
 
 libs-y 					+= arch/x86_64/lib/
Index: xx-sources/arch/x86_64/kernel/traps.c
===================================================================
--- xx-sources.orig/arch/x86_64/kernel/traps.c	2004-10-11 16:25:48.006050600 -0400
+++ xx-sources/arch/x86_64/kernel/traps.c	2004-10-11 16:35:35.007812768 -0400
@@ -139,6 +139,10 @@
 
 	printk("\nCall Trace:");
 	i = 0; 
+
+#ifdef CONFIG_CFLAGS_EDIT
+       printk("\nCFLAGS_EDIT\n");
+#endif
 	
 	estack_end = in_exception_stack(cpu, (unsigned long)stack); 
 	if (estack_end) { 
Index: xx-sources/lib/Kconfig.debug
===================================================================
--- xx-sources.orig/lib/Kconfig.debug	2004-10-11 16:26:14.003098448 -0400
+++ xx-sources/lib/Kconfig.debug	2004-10-11 16:35:35.010812312 -0400
@@ -6,6 +6,48 @@
 	  Say Y here if you are developing drivers or trying to debug and
 	  identify kernel problems.
 
+config CFLAGS_EDIT
+	bool "CFLAGS hacking"
+	depends on DEBUG_KERNEL && (X86 || X86_64)
+	default n
+	help
+	  This allows you to append to or override the CFLAGS set for your
+	  machine. Changing CFLAGS is commonly a very bad idea, because
+	  Kernel Hackers Know Best. However if you wish to mess around
+	  with your CFLAGS anyway, enable this and enter your CFLAGS
+	  string to append below.
+
+	  The original intent of this option is to allow for use of flags that
+	  don't really affect the result so much as gcc itself - maybe you
+	  don't want to guess branch probabilities for some reason. That said,
+	  we recognize that there's a nicely sized market for people who just
+	  want to tinker, and this is why this option exists.
+
+	  A lot of things may become unpredictable when using aggressive CFLAGS
+	  in the kernel. Don't complain about _anything_ until disabling this
+	  option.
+
+	  If you have any doubt, say N.
+
+config CFLAGS_STRING
+	string "New CFLAGS"
+	depends on CFLAGS_EDIT
+	default "CHANGE ME"
+	help
+	  Enter your new CFLAGS here, using appropriate syntax for gcc. If you
+	  don't know what this means, flee now.
+
+config CFLAGS_OVERRIDE
+	bool "Override existing CFLAGS"
+	depends on CFLAGS_EDIT
+	default n
+	help
+	  This allows you to unset any CFLAGS generated from processor selections
+	  made at the top of the config.
+
+	  There is no reason to enable this. You always want the bare minimum for
+	  your processor. Say N.
+
 config MAGIC_SYSRQ
 	bool "Magic SysRq key"
 	depends on DEBUG_KERNEL && (ALPHA || ARM || X86 || IA64 || M68K || MIPS || PARISC || PPC32 || PPC64 || ARCH_S390 || SUPERH || SUPERH64 || SPARC32 || SPARC64 || X86_64)
