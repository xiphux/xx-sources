
From: Andi Kleen <ak@suse.de>

Add missing argument brackets in bitop macros

Makes these macros somewhat safer to use.

Signed-off-by: Andi Kleen <ak@suse.de>
Signed-off-by: Andrew Morton <akpm@osdl.org>
---

 25-akpm/include/asm-x86_64/bitops.h |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff -puN include/asm-x86_64/bitops.h~x86_64-add-brackets-to-bitops include/asm-x86_64/bitops.h
--- 25/include/asm-x86_64/bitops.h~x86_64-add-brackets-to-bitops	Wed Jan 12 15:47:16 2005
+++ 25-akpm/include/asm-x86_64/bitops.h	Wed Jan 12 15:47:16 2005
@@ -267,22 +267,22 @@ static inline unsigned long __scanbit(un
 }
 
 #define find_first_bit(addr,size) \
-((__builtin_constant_p(size) && size <= BITS_PER_LONG ? \
+((__builtin_constant_p(size) && (size) <= BITS_PER_LONG ? \
   (__scanbit(*(unsigned long *)addr,(size))) : \
   find_first_bit(addr,size)))
 
 #define find_next_bit(addr,size,off) \
-((__builtin_constant_p(size) && size <= BITS_PER_LONG ? 	  \
+((__builtin_constant_p(size) && (size) <= BITS_PER_LONG ? 	  \
   ((off) + (__scanbit((*(unsigned long *)addr) >> (off),(size)-(off)))) : \
 	find_next_bit(addr,size,off)))
 
 #define find_first_zero_bit(addr,size) \
-((__builtin_constant_p(size) && size <= BITS_PER_LONG ? \
+((__builtin_constant_p(size) && (size) <= BITS_PER_LONG ? \
   (__scanbit(~*(unsigned long *)addr,(size))) : \
   	find_first_zero_bit(addr,size)))
 	
 #define find_next_zero_bit(addr,size,off) \
-((__builtin_constant_p(size) && size <= BITS_PER_LONG ? 	  \
+((__builtin_constant_p(size) && (size) <= BITS_PER_LONG ? 	  \
   ((off)+(__scanbit(~(((*(unsigned long *)addr)) >> (off)),(size)-(off)))) : \
 	find_next_zero_bit(addr,size,off)))
 
_
